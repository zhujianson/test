//
//  HMHomeViewController.m
//  healthManagement1.0
//
//  Created by jiuhao-yangshuo on 15/10/19.
//  Copyright © 2015年 xuGuohong. All rights reserved.
//

#import "HMHomeViewController.h"
#import "AppDelegate.h"
#import "UIImageView+WebCache.h"
#import "SettingViewController.h"
#import "BoxListViewController.h"
#import "DiaryModelView.h"
#import "DoctorViewController.h"
#import "ScanDeviceListView.h"
//#import "SteperHomeViewController.h"
#import "HealthNewsListViewController.h"
//#import "ToolsViewController.h"
#import "AccountInformationViewController.h"
#import "DBOperate.h"
//#import "WebViewController.h"
#import "ShowConsultViewController.h"
#import "MsgDBOperate.h"
#import "EScrollerView.h"
#import "NoticeDetailViewController.h"
#import "WalletViewController.h"
#import "PersonalCenterViewController.h"
#import "HomeIndexItemViewController.h"
#import "HomeModel.h"
#import "TopicDetailsViewController.h"
#import "ThinViewController.h"
#import "EGORefreshTableHeaderView.h"
#import "HomeTableViewCell.h"
#import "XHAudioPlayerHelper.h"

static NSString *const kReportTime  = @"kReportTimet";
static NSString *const kNewsTime  = @"kNewsTime";
static NSInteger kImageViewTag  = 1601;
static NSInteger kRedImageViewTag  = 1603;


@interface HMHomeViewController ()<EScrollerViewDelegate,UITableViewDelegate,UITableViewDataSource,EGORefreshTableHeaderDelegate>
{
//    UIScrollView *m_scrollView;
    UIImageView *m_navRedImage;
    UILabel *tipTimeLable;//@"下午好"
    UILabel *tipContent;//@"大雪天要
    UIButton *m_tipImageView;
    
    EScrollerView *m_advScroller;
    NSDictionary *m_dict;
    NSMutableDictionary *m_lastMsgDic;/*聊天消息   徐国洪*/
    BOOL m_refreshScroe; //只是刷新报告内容
    
    float m_viewScale;
    NSMutableArray *m_menusViewArray;
    float kImageHeight;
    UIImageView *m_docRedImage;
    
    CGFloat beforeNewHeight;
    UIView *m_buttonsView;
    
    NSMutableDictionary *m_thinDic;
    EGORefreshTableHeaderView* m_refreshHeaderView;
    UITableView * m_table;
    NSMutableArray * m_allData;
    
    BOOL m_reloading;
    UIView *m_tableHeaderView;//头
}

//@property (nonatomic,retain) PanViewRoom *panViewRoom;


//@property (nonatomic,strong) LeftSliderViewController *m_leftView;
@end

@implementation HMHomeViewController
//@synthesize m_leftView;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self)
    {
//        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(reciveMesg:) name:@"reciveMesg" object:nil];
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(homeDataLoad) name:kRfreshHome object:nil];
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(refleshThin) name:@"refleshThin" object:nil];

        [self createNav];
        m_refreshScroe = NO;
        m_viewScale = kRelativity6DeviceWidth;
        m_menusViewArray = [[NSMutableArray alloc] init];
        kImageHeight  = 160;
    
    }
    return self;
}

- (void)dealloc
{
    [[NSNotificationCenter defaultCenter] removeObserver:self];
}


- (void)viewDidLoad
{
    [super viewDidLoad];
    
    m_allData = [[NSMutableArray alloc]init];
    
    AppDelegate *myDelegate = [Common getAppDelegate];
    myDelegate.navigationVC = self.navigationController;
    
    kImageHeight =  kImageHeight *m_viewScale;
    if (IS_4_INCH_SCREEN)
    {
        kImageHeight -= 11;
    }
    [self createScrollView];
    
    if ([g_nowUserInfo.userToken length])
    {
        [self getMyInfo];
        [self getMyInformation];
    }
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    
    [self refleshTip];
    
    if (IOS_7) {
        [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent];
    }
}

-(void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
}

- (void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
    if (m_advScroller) {
        [m_advScroller startPlayAdv];
    }
}

- (void)refleshTip
{
    if(m_docRedImage)
    {
        m_docRedImage.hidden = !MAX(g_nowUserInfo.doctorMsgCount, 0);
    }
}

- (void)createScrollView
{
    m_table = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, kDeviceWidth, kDeviceHeight-49) style:UITableViewStylePlain];
    m_table.dataSource = self;
    m_table.delegate = self;
    //分割线颜色
    m_table.separatorColor = [CommonImage colorWithHexString:VERSION_LIN_COLOR_QIAN];
    [self.view addSubview:m_table];
    
    m_tableHeaderView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, kDeviceWidth, 0)];
    m_table.tableHeaderView = m_tableHeaderView;
    
    [Common setExtraCellLineHidden:m_table];
    
    m_refreshHeaderView = [[EGORefreshTableHeaderView alloc] initWithFrame:CGRectMake(0, -460, kDeviceWidth, 460)];
    m_refreshHeaderView.delegate = self;
    m_refreshHeaderView.backgroundColor = [CommonImage colorWithHexString:@"f2f2f2"];
    [m_table addSubview:m_refreshHeaderView];
}

//创建广告滚动条
- (void)createAdvertising:(NSMutableArray*)array
{
    if (m_advScroller) {
        [m_advScroller setCreatBackViewStr:array];
    }
    else {
        m_advScroller = [[EScrollerView alloc] initWithFrameRect:CGRectMake(0, 0, kDeviceWidth, kImageHeight) ImageArray:array isAutoPlay:YES setImageKey:@"img_url"];
        m_advScroller.delegate = self;
        //        m_advScroller.showPageControl = YES;
        [m_tableHeaderView addSubview:m_advScroller];
        
        
        m_tableHeaderView.height = m_advScroller.bottom;
        float height = m_tableHeaderView.bottom;
        
        if (m_buttonsView) {
            m_buttonsView.top = m_advScroller.bottom;
            height = m_buttonsView.bottom;
        }
        
        [self setTableHeaderViewFrame:height];
    }
}

- (void)setTableHeaderViewFrame:(float)height
{
    m_tableHeaderView.height = height;
    
    m_table.tableHeaderView = m_tableHeaderView;
}

//创建
- (void)createContentView
{
    float viewHight = kImageHeight;
    //创建模板
    [self createViewWithStartX:viewHight];
    
    NSMutableArray *menusArray = m_dict[@"menus"];
    //添加充内容
    [self updateMenusWithArray:menusArray];
    
    [self setTableHeaderViewFrame:m_buttonsView.bottom];
}

- (void)createViewWithStartX:(float)startX
{
    if (m_buttonsView)
    {
        return;
    }
    
    UIView *lineView = nil;
    int num = 4;
    float viewHight = startX;
    
    NSMutableArray *menusArray = m_dict[@"menus"];
    NSMutableArray * m_dataArr = [[NSMutableArray alloc] init];
    [m_dataArr addObjectsFromArray:menusArray];
    [m_dataArr addObject:@""];
    
    CGFloat w,h;
    UIButton * backViewBtn = nil;
    
    UIView *buttonsView = [[UIView alloc] initWithFrame:CGRectMake(0, viewHight, kDeviceWidth, 0.1)];
    buttonsView.backgroundColor = [UIColor clearColor];
    m_buttonsView = buttonsView;
    [m_tableHeaderView addSubview:buttonsView];
    
    CGFloat viewW = kDeviceWidth/num;//, viewH = 103.0*m_viewScale;
    
    for (int i = 0; i<MIN(m_dataArr.count+1, 4); i++) {
        h = i%num;
        w = i/num;
        __block UIImageView * imageV;
        backViewBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        
        backViewBtn.tag = 100+i;
        backViewBtn.frame = CGRectMake(h * viewW, 0 , viewW, viewW);
        backViewBtn.backgroundColor = [UIColor whiteColor];
        [buttonsView addSubview:backViewBtn];
        
        imageV = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 40, 40)];
        imageV.center = CGPointMake(backViewBtn.width/2, (backViewBtn.height-20)/2);
        imageV.contentMode = UIViewContentModeScaleAspectFit;
        imageV.tag = kImageViewTag;
        [backViewBtn addSubview:imageV];
        
        [backViewBtn.titleLabel setContentMode:UIViewContentModeCenter];
        [backViewBtn.titleLabel setFont:[UIFont systemFontOfSize:13]];
        [backViewBtn setTitleEdgeInsets:UIEdgeInsetsMake(50, 0, 0.0, 0.0)];
        [backViewBtn setTitleColor:[CommonImage colorWithHexString:@"666666"] forState:UIControlStateNormal];
        [backViewBtn setTitleColor:[CommonImage colorWithHexString:@"666666"] forState:UIControlStateHighlighted];
        
        [backViewBtn addTarget:self action:@selector(setJumpEvents:) forControlEvents:UIControlEventTouchUpInside];
        UIImage* HighlenbleImage = [CommonImage createImageWithColor:[CommonImage colorWithHexString:@"f5f5f5"]];
        [backViewBtn setBackgroundImage:HighlenbleImage forState:UIControlStateHighlighted];
        [m_menusViewArray addObject:backViewBtn];
        
        UIImageView *redImage = [[UIImageView alloc]initWithFrame:CGRectMake(imageV.right -2, imageV.top+2, 8, 8)];
        redImage.backgroundColor = [CommonImage colorWithHexString:VERSION_ERROR_TEXT_COLOR];
        redImage.clipsToBounds = YES;
        redImage.tag = kRedImageViewTag;
        redImage.layer.cornerRadius = 4;
        redImage.hidden = YES;
        redImage.backgroundColor = [UIColor redColor];
        [backViewBtn addSubview:redImage];
    }
    
    int lineNum = (int)(m_dataArr.count-1)/num+1;
    for (int i = 0; i<lineNum; i++) {
        lineView  = [[UIView alloc] initWithFrame:CGRectMake(0, backViewBtn.height*i-0.25,kDeviceWidth, 0.5)];
        lineView.backgroundColor =  [CommonImage colorWithHexString:@"ededed"];
        [buttonsView addSubview:lineView];
    }
    
    buttonsView.height = backViewBtn.bottom;
    viewHight = buttonsView.bottom;
    
    viewHight +=  8.0*m_viewScale;
    beforeNewHeight = viewHight;
}

#pragma mark - EGORefreshTableHeaderDelegate
//收起刷新
- (void)finishRefresh
{
    [m_refreshHeaderView egoRefreshScrollViewDataSourceDidFinishedLoading:m_table];
    m_reloading = NO;
}

- (void)egoRefreshTableHeaderDidTriggerRefresh:(EGORefreshTableHeaderView *)view
{
    if (m_reloading) {
        return;
    }
    m_reloading = YES;
    [self homeDataLoad];
}

- (BOOL)egoRefreshTableHeaderDataSourceIsLoading:(EGORefreshTableHeaderView *)view
{
    return m_reloading;
}

- (NSDate *)egoRefreshTableHeaderDataSourceLastUpdated:(EGORefreshTableHeaderView *)view
{
    return [NSDate date];
}

- (void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    [m_refreshHeaderView egoRefreshScrollViewDidScroll:scrollView];
}

//UIScrollView松开手指
- (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate
{
    [m_refreshHeaderView egoRefreshScrollViewDidEndDragging:scrollView];
}

#pragma mark - UITableView DataSource  And Delegate

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return m_allData.count;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if (section == 2) {
        return 47;
    }
    else {
        return 7;
    }
}

- (CGFloat)tableView:(UITableView*)tableView heightForFooterInSection:(NSInteger)section
{
    return 0.01;
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    UIView *lineView1 = [[UIView alloc] initWithFrame:CGRectMake(0, 0 , kDeviceWidth, 47)];
    lineView1.backgroundColor = self.view.backgroundColor;
    
    if (section == 2) {
        UILabel *titleLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 7, kDeviceWidth, 40)];
        titleLabel.textColor = [CommonImage colorWithHexString:@"333333"];
        titleLabel.font = [UIFont systemFontOfSize:15.0f];
        titleLabel.backgroundColor = [UIColor whiteColor];
        titleLabel.text = @"      健康资讯";
        titleLabel.userInteractionEnabled = YES;
        [lineView1 addSubview:titleLabel];
        
        UIView *viewheader = [[UIView alloc] initWithFrame:CGRectMake(15, 12+7, 2, 16)];
        viewheader.backgroundColor = [CommonImage colorWithHexString:@"8adb4e"];
        [lineView1 addSubview:viewheader];
        
        viewheader = [[UIView alloc] initWithFrame:CGRectMake(0, 39.5+7, kDeviceWidth, 0.5)];
        viewheader.backgroundColor = [CommonImage colorWithHexString:LINE_COLOR];
        [lineView1 addSubview:viewheader];
        
        UIButton *butMore = [UIButton buttonWithType:UIButtonTypeCustom];
        butMore.frame = CGRectMake(kDeviceWidth-80, 7, 80, 40);
        [butMore setTitle:@"更多" forState:UIControlStateNormal];
        [butMore setTitleColor:[CommonImage colorWithHexString:@"999999"] forState:UIControlStateNormal];
        [butMore addTarget:self action:@selector(butEventMoreNews) forControlEvents:UIControlEventTouchUpInside];
        butMore.titleLabel.font = [UIFont systemFontOfSize:14];
        [lineView1 addSubview:butMore];

    }

    return lineView1;
}

- (void)butEventMoreNews
{
    UIStoryboard *healthNewsSB = [UIStoryboard storyboardWithName:@"HealthNews" bundle:nil];
    HealthNewsListViewController *helthNewsVC = [healthNewsSB instantiateViewControllerWithIdentifier:@"HealthNewsList"];
    [self.navigationController pushViewController:helthNewsVC animated:YES];
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (!indexPath.section) {
        return 150;
    }else if(indexPath.section==1){
        return 330/2;
    }
    return 190/2;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    NSMutableArray *sectionArray = m_allData[section];
    return sectionArray.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    switch (indexPath.section) {
        case 0:
        {
            static NSString * cell1= @"cell1";
            SoundTableViewCell* cell = [tableView dequeueReusableCellWithIdentifier:cell1];
            if (!cell) {
                cell = [[SoundTableViewCell alloc] initWithStyle:UITableViewCellStyleValue1
                                                reuseIdentifier:cell1];
                cell.selectedBackgroundView = [Common creatCellBackView];
                cell.selectionStyle = UITableViewCellEditingStyleNone;
            }
            if (indexPath.row<[m_allData[indexPath.section] count]) {
                NSDictionary * dic = m_allData[indexPath.section][indexPath.row];
                [cell setSoundInfoWithDic:dic];
            }
            
            return cell;

        }
            break;
        case 1:
        {
            static NSString * cell1= @"cell2";
            VideoTableViewCell* cell = [tableView dequeueReusableCellWithIdentifier:cell1];
            if (!cell) {
                cell = [[VideoTableViewCell alloc] initWithStyle:UITableViewCellStyleValue1
                                                reuseIdentifier:cell1];
                cell.selectedBackgroundView = [Common creatCellBackView];
                cell.selectionStyle = UITableViewCellEditingStyleNone;

            }
            if (indexPath.row<[m_allData[indexPath.section] count]) {
                NSDictionary * dic = m_allData[indexPath.section][indexPath.row];

                [cell setVideoInfoWithDic:dic];
            }
            
            return cell;

        }
            break;
        case 2:
        {
            static NSString * cell1= @"cell3";
            HomeTableViewCell* cell = [tableView dequeueReusableCellWithIdentifier:cell1];
            if (!cell) {
                cell = [[HomeTableViewCell alloc] initWithStyle:UITableViewCellStyleValue1
                                                reuseIdentifier:cell1];
                cell.selectedBackgroundView = [Common creatCellBackView];
            }
            [cell setInformationWithDic:m_allData[indexPath.section][indexPath.row]];
            
            return cell;

        }
            break;
    
        default:
            break;
    }
    return nil;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    NSMutableDictionary *dic = m_allData[indexPath.section];
    SoundTableViewCell *cell = [m_table cellForRowAtIndexPath:indexPath];
    
    BOOL is = [[dic objectForKey:@"isPlay"] boolValue];
    if (!is) {
        [cell.imagePlayView startAnimating];
    } else {
        [cell.imagePlayView stopAnimating];
    }
    [[XHAudioPlayerHelper shareInstance] managerAudioWithFileName:dic[@"content"] toPlay:!is withDic:dic];
    
    [dic setObject:[NSNumber numberWithBool:!is] forKey:@"isPlay"];
}
#pragma end

//停止播放
- (void)didAudioPlayerStopPlay:(AVAudioPlayer*)audioPlayer
{
    XHAudioPlayerHelper *audioPlay = [XHAudioPlayerHelper shareInstance];
    NSMutableDictionary *dic = audioPlay.dicInfo;
    if (dic) {
        [dic setObject:[NSNumber numberWithBool:0] forKey:@"isPlay"];
        int index = (int)[m_allData indexOfObject:dic];
        SoundTableViewCell *cell = (SoundTableViewCell*)[m_table cellForRowAtIndexPath:[NSIndexPath indexPathForRow:index inSection:0]];
        if (cell) {
            [cell.imagePlayView stopAnimating];
        }
    }
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - Event response
//广告点击回调
- (void)touchAdvertising:(NSMutableDictionary*)dic
{
    NSDictionary *dicItem = dic;
    
    if ([dicItem[@"islink"] boolValue]) {
        
        //跳转到活动页面
        NoticeDetailViewController *noticeDetailVC = [[NoticeDetailViewController alloc] init];
        noticeDetailVC.m_isHideNavBar = [dicItem[@"transparentYn"] isEqualToString:@"Y"];
        
        NSString *requestURL = dic[@"click_url"];
        NSMutableDictionary *dicc = [NSMutableDictionary dictionary];
        [dicc setObject:requestURL forKey:@"url"];
        noticeDetailVC.m_url = requestURL;
        [dicc setObject:dic[@"isShare"] forKey:@"isShare"];
        [noticeDetailVC setM_dicInfo:dicc];
        noticeDetailVC.shareURL = requestURL;
        noticeDetailVC.titleName = dicItem[@"title"];
        noticeDetailVC.subTitle = dicItem[@"subtitle"];
        noticeDetailVC.newsId = dicItem[@"detailID"];
        [self.navigationController pushViewController:noticeDetailVC animated:YES];
    }
}

- (void)gotoWebViewWithDict:(NSMutableDictionary *)dict
{
    NoticeDetailViewController *noticeDetailVC = ( NoticeDetailViewController *)[HomeIndexItemViewController  fetchViewControllerWithDict:dict];
    if (!noticeDetailVC)
    {
        return;
    }
    [self.navigationController pushViewController:noticeDetailVC animated:YES];
    [HomeModel setNoRedImageWithDict:dict];
}

- (void)updateMenusWithArray:(NSArray *)menusArray
{
    NSInteger count = MIN(menusArray.count+1, m_menusViewArray.count);
    for (NSInteger i = 0 ; i < count;i++)
    {
        UIButton *backViewBtn = m_menusViewArray[i];
        UIImageView *imageV = (UIImageView*)[backViewBtn viewWithTag:kImageViewTag];
        NSDictionary *dict = nil;
        if (i != count-1)
        {
            NSInteger index = MIN(i, menusArray.count-1);
            dict = menusArray[index];
            //iconType为1原生应用 根据iconTarget查找本地字典确定应用指向 为2 H5页面 取iconTarget为页面地址
            [CommonImage setImageFromServer:dict[@"imgUrl"] View:imageV Type:2];
            [backViewBtn setTitle:dict[@"iconName"] forState:UIControlStateNormal];
        }
        else
        {
            imageV.image = [UIImage imageNamed:@"common.bundle/home/homeMore.png"];
            [backViewBtn setTitle:@"太平送福" forState:UIControlStateNormal];
            dict = @{};
        }
        backViewBtn.dicInfo = dict;
        if ([@"question" isEqualToString:dict[@"iconTarget"]])
        {
             UIImageView *redImageV = (UIImageView*)[backViewBtn viewWithTag:kRedImageViewTag];
            m_docRedImage = redImageV;
        }
        [self setHidenRedImageWithShow:[HomeModel isShowRedImageWithDict:dict] withButton:backViewBtn];
    }
}

- (void)setHidenRedImageWithShow:(BOOL)show withButton:(UIButton *)backViewBtn
{
    UIImageView *redImageV = (UIImageView*)[backViewBtn viewWithTag:kRedImageViewTag];
    redImageV.hidden = show;
}

- (void)setJumpEvents:(UIButton *)btn
{
    m_thinDic = nil;
    NSMutableDictionary *dict = btn.dicInfo;
    if (dict &&!dict.count)
    {
        WS(weakSelf);
        HomeIndexItemViewController * wallet = [[HomeIndexItemViewController alloc]init];
        [wallet setKXBlock:^(id content) {
            [weakSelf updateMenusWithArray:content];
        }];
        [self.navigationController pushViewController:wallet animated:YES];
        return;
    }
    else
    {
        int iconType = [dict[@"iconType"] intValue];
        NSString *iconTarget = dict[@"iconTarget"];
        //iconType为1原生应用
        if (iconType == 2)
        {
            if ([iconTarget isEqualToString:@"ThinViewController"]) {
                m_thinDic = dict;
            }
            if ([dict.allKeys containsObject:@"iconName"])
            {
                 [dict setObject:dict[@"iconName"] forKey:kWebTitle];
            }
            [self gotoWebViewWithDict:dict];
            [self setHidenRedImageWithShow:YES withButton:btn];
        }
        else
        {
            NSString *viewC = [HomeModel fetchViewControllerStrWith:iconTarget];
            UIViewController *viewController = [[NSClassFromString(viewC) alloc]init];
            if (viewController)
            {
                [self.navigationController pushViewController:viewController animated:YES];
            }
        }
        return;
    }
}

- (void)refleshThin
{
    if (m_thinDic) {
        [m_thinDic setObject:[NSNumber numberWithInt:1] forKey:@"iconType"];
    }
}

//只是刷新得分
- (void)refreshScore
{
    m_refreshScroe = YES;
    [self getMyInfo];
}

#pragma mark - Set-getUi
- (void)createNav
{
    self.navigationItem.rightBarButtonItem = [Common createNavBarButton:self setEvent:@selector(showDailirenVC) withNormalImge:@"common.bundle/nav/dialiren.png" andHighlightImge:nil];
    
    UIImageView *imageV = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 120, 44)];
    imageV.contentMode = UIViewContentModeCenter;
    imageV.image = [UIImage imageNamed:@"common.bundle/home/homeLogo.png"];
    self.navigationItem.titleView = imageV;
}

- (void)showDailirenVC
{
    
}

//获取未读消息
- (void)getMsg
{
    NSString *time = [[NSUserDefaults standardUserDefaults] objectForKey:[NSString stringWithFormat:@"%@boxLastRowTime1", g_nowUserInfo.userid]];
    NSMutableDictionary *dic = [NSMutableDictionary dictionary];
    [dic setObject:time?time:@"-1" forKey:@"time"];
    [dic setObject:[DiaryModelView getTimeWithKey:@"kLastPostTime"] forKey:@"postTime"];
    [dic setObject:[DiaryModelView getTimeWithKey:@"kLastTime"]  forKey:@"replyTime"];
    [[CommonHttpRequest defaultInstance] sendNewPostRequest:GET_MSG_NOT_READ_COUNT values:dic requestKey:GET_MSG_NOT_READ_COUNT delegate:self controller:self actiViewFlag:0 title:NSLocalizedString(@"加载中...", nil)];
}

- (void)getMyInfo
{
    [g_nowUserInfo setMyBasicInformation:[[NSUserDefaults standardUserDefaults] objectForKey:@"user_Info"]];

    [self homeDataLoad];
}

- (void)homeDataLoad
{
    if (!g_nowUserInfo.userToken) {
        return;
    }
    NSMutableDictionary* dic = [NSMutableDictionary dictionary];
    [[CommonHttpRequest defaultInstance] sendNewPostRequest:GET_API_USERIFNO_URL values:dic requestKey:GET_API_USERIFNO_URL delegate:self controller:self actiViewFlag:0 title:NSLocalizedString(@"", nil)];
}

- (void)didFinishSuccess:(ASIHTTPRequest*)loader
{
    NSString* responseString = [loader responseString];
    NSDictionary* dic = [responseString KXjSONValueObject];
    
    NSDictionary *head = dic[@"head"];
    if (![head[@"state"] intValue]) {
        NSDictionary *body = dic[@"body"];
        if (!body.count)
        {
            return;
        }
        if ([loader.username isEqualToString:GET_API_USERIFNO_URL])
        {
            [m_allData removeAllObjects];
            
            m_dict = body;
            
            g_nowUserInfo.broadcastNotReadNum = [[body objectForKey:@"brocastCounts"] intValue]; //信箱未读数
            g_nowUserInfo.doctorMsgCount = [[body objectForKey:@"questionCounts"] intValue]; //医生未读数
            g_nowUserInfo.myPlanCounts = [[body objectForKey:@"planCounts"] intValue]; //看健康未读数
//          g_nowUserInfo.myReportCounts = [[body objectForKey:@"reportCounts"] intValue]; //报告未读数
//            [self refreshNoReadRedImage];
            
            [APP_DELEGATE2 setUserID:g_nowUserInfo.userid];
            //公告栏
            NSArray *announcementlist = [body objectForKey:@"list"];
            if (announcementlist.count) {
                
                NSMutableDictionary *dicItem;
                NSMutableArray *array = [NSMutableArray array];
                for (NSDictionary *item in announcementlist) {
                    
                    NSString *detailID = item[@"id"];
                    NSString *img_url = [Common isNULLString3:item[@"img"]];
                    
                    NSString *click_url = [Common isNULLString3:item[@"url"]];
                    NSString *isShare = [HomeModel getShareFromDict:item withKey:@"isShare"];
                    dicItem = [NSMutableDictionary dictionaryWithDictionary:
                               @{@"typestr":@"公告栏",
                                 @"title":[Common isNULLString3: item[@"title"]],
                                 @"img_url":img_url,
                                 @"click_url":click_url,
                                 @"islink": [Common isNULLString3:item[@"islink"]],
                                 @"isShare": isShare,//0 不分享  1：分享
                                 @"detailID":detailID,
                                 @"subtitle":[Common isNULLString3:item[@"content"]]}];
                    
                    [array addObject:dicItem];
                }
                [self createAdvertising:array];
                [self createContentView];
                
                [m_allData addObject:@[@{@"title": @"熬夜是否真的对皮肤不好？3点睡、12点起和11点睡、八点起是否有区别？",@"name":@"冯绍峰",@"job":@"医生护士",@"header":@"",@"reading":@"23"}]];
                [m_allData addObject:@[@{@"image1": @"",@"title1": @"国人堂医师大讲堂",@"reading1": @"15000",@"isFree1": @"1",@"image2": @"",@"title2": @"国人堂医师大讲堂",@"reading2": @"15000",@"isFree2": @"0"}]];

                [m_allData addObject:m_dict[@"newsList"]];
                [m_table reloadData];
                
//                if (!m_leftView)
//                {
//                    m_leftView = [PersonalCenterViewController showLeftSliderViewControllerWithMainViewController:self];
//                }
            }
            
        }else if ([loader.username isEqualToString:LOGIN_API_URL])
        {
            g_nowUserInfo = [Common initWithUserInfoDict:body];
            [self getMyInfo];
            [self getMyInformation];
//            [self getMsg];
        }
        else if ([loader.username isEqualToString:GET_MSG_NOT_READ_COUNT])
        {
            NSDictionary * body = dic[@"body"];
            g_nowUserInfo.broadcastNotReadNum = [[body objectForKey:@"brocastCounts"] intValue]; //信箱未读数
            g_nowUserInfo.myMessageNoReadNum = [[body objectForKey:@"unread_comment"] intValue]; //评论未读数
            g_nowUserInfo.totalunreadMsgCount = [[body objectForKey:@"unread_friend"] intValue]; //总未读数
            g_nowUserInfo.doctorMsgCount = [[body objectForKey:@"unread_doctor"] intValue]; //医生未读数
            g_nowUserInfo.friendMsgCount = [[body objectForKey:@"friendMsgCount"] intValue]; //糖友未读数
            g_nowUserInfo.myPostNotRead = [[body objectForKey:@"my_post_not_read"] intValue]; //我的帖子未读总数量
            g_nowUserInfo.myThreadNotRead = [[body objectForKey:@"my_thread_not_read"] intValue]; //我的跟帖未读总数量
            g_nowUserInfo.integral = [body[@"points_available"] intValue];
//            [self refreshNoReadRedImage];
        }
        else if ([loader.username isEqualToString:GETMYINFO_API_URL])
        {
            [g_nowUserInfo setMyBasicInformation:[dic objectForKey:@"body"][@"user_info"]];
            [[NSNotificationCenter defaultCenter] postNotificationName:@"getWallet" object:nil];
        }
    }
    else
    {
        [Common TipDialog2:head[@"msg"]];
    }
}


- (void)didFinishFail:(ASIHTTPRequest *)loader
{
    if ([loader.username isEqualToString:GETMYINFO_API_URL])
    {
        [g_nowUserInfo setMyBasicInformation:[[NSUserDefaults standardUserDefaults] objectForKey:@"user_Info"]];
        [APP_DELEGATE2 setUserID:g_nowUserInfo.userid];
    }
}

#pragma mark - PrivateMethod

- (void)getMyInformation
{
    //获取个人信息
    NSMutableDictionary* dic1 = [NSMutableDictionary dictionary];
    [[CommonHttpRequest defaultInstance] sendNewPostRequest:GETMYINFO_API_URL values:dic1 requestKey:GETMYINFO_API_URL delegate:self controller:self actiViewFlag:0 title:NSLocalizedString(@"登录中...", nil)];
}
@end
