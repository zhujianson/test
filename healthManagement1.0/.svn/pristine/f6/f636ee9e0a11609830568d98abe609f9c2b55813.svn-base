//
//  TopicViewController.m
//  jiuhaohealth2.1
//
//  Created by 徐国洪 on 14-8-16.
//  Copyright (c) 2014年 xuGuohong. All rights reserved.
//

#import "TopicViewController.h"
#import "CommonHttpRequest.h"
#import "ExpertTopicTableViewCell.h"
#import "EGORefreshTableHeaderView.h"
#import "OneExpertViewController.h"
#import "TopicDetailsViewController.h"
#import "MJPhotoBrowser.h"
#import "ConsultInfoViewController.h"
#import "UIImageView+WebCache.h"

@interface TopicViewController ()
<UITableViewDataSource,UITableViewDelegate,EGORefreshTableHeaderDelegate, MJPhotoBrowserDelegate>
{
    UITableView *newsListTableView;
    EGORefreshTableHeaderView *_headView;
    BOOL _isloading;
    
    NSMutableArray *m_array;
}
@end

@implementation TopicViewController

- (void)dealloc
{
	[m_array release];
//	[m_OperationQueue release];
	[newsListTableView release];
	[_headView release];
	[m_arrayImage release];
	m_advScroller.delegate = nil;
	[m_advScroller release];
	m_advScroller = nil;
	
    [super dealloc];
}

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        self.title = @"话题";
        self.log_pageID = 62;

    }
    return self;
}

- (void)butEventAskExpert
{
    
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
	m_isTabbarDown = NO;
	m_down = YES;
    m_array = [[NSMutableArray alloc] init];
    m_arrayImage = [[NSMutableArray alloc] init];
    
//	m_OperationQueue = [[IconOperationQueue alloc] init];
//	[m_OperationQueue setM_arrayList:m_array];
//	m_OperationQueue.delegate = self;
//    m_OperationQueue.imageKey = @"newTitleFilepath";
//    m_OperationQueue.pathSuffix = @"?imageView2/1/w/600/h/340";
    
    newsListTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, kDeviceWidth, kDeviceHeight - g_tabbarHeight) style:UITableViewStyleGrouped];
    newsListTableView.dataSource = self;
    newsListTableView.delegate = self;
//    newsListTableView.rowHeight = 270;
//    newsListTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    newsListTableView.separatorColor = [CommonImage colorWithHexString:LINE_COLOR];
    newsListTableView.backgroundColor = [UIColor clearColor];//[CommonImage colorWithHexString:@"#f6f7ed"];
    [self.view addSubview:newsListTableView];
	UIView *headerView = [Common createTableFooter];
	newsListTableView.tableFooterView = headerView;
    
    _headView = [[EGORefreshTableHeaderView alloc] initWithFrame:CGRectMake(0, -460, kDeviceWidth, 460)];
    _headView.delegate = self;
    _headView.backgroundColor = [UIColor clearColor];
    [newsListTableView addSubview:_headView];
    
    [self getDataSource];
//    [self loadAdvData];
}

- (void)viewWillAppear:(BOOL)animated
{
	[m_advScroller startPlayAdv];
    [super viewWillAppear:animated];
}

- (void)viewWillDisappear:(BOOL)animated
{
	[m_advScroller pausePlayAdv];
    [super viewWillDisappear:animated];
}

- (void)loadAdvData
{
    [[CommonHttpRequest defaultInstance] sendNewPostRequest:GET_ADVERT_LIST values:nil requestKey:GET_ADVERT_LIST delegate:self controller:self actiViewFlag:0 title:nil];
}

//创建广告滚动条
- (void)createAdvertising:(NSMutableArray*)array
{
    if (m_advScroller) {
        [m_advScroller setCreatBackViewStr:array];
    }
	else {
		m_advScroller = [[EScrollerView alloc] initWithFrameRect:CGRectMake(0, 0, kDeviceWidth, 180*kDeviceWidth/320) ImageArray:array isAutoPlay:YES setImageKey:@"filepath"];//pathSuffix:[NSString stringWithFormat:@"?imageView2/1/w/%d/h/%d", 640, 360]
		m_advScroller.delegate = self;
		newsListTableView.tableHeaderView = m_advScroller;
	}
}

//广告点击回调
- (void)touchAdvertising:(NSMutableDictionary*)dic
{
    [self setUMtitle:dic[@"title"]];
    switch ([[dic objectForKey:@"type"] intValue]) { //type 类型（1.专家，2.话题，3.主题)
        case 1:
        {
            ConsultInfoViewController *consult = [[ConsultInfoViewController alloc] init];
            [dic setObject:[dic objectForKey:@"typeId"] forKey:@"doctorId"];
            [consult setM_dicInfo:dic];
            [self.navigationController pushViewController:consult animated:YES];
            [consult release];
        }
            break;
        case 2:
        {
            OneExpertViewController *oneExpertVC = [[OneExpertViewController alloc] init];
            oneExpertVC.postId = dic[@"typeId"];
            [self.navigationController pushViewController:oneExpertVC animated:YES];
            [oneExpertVC release];
        }
            break;
        case 3:
        {
            TopicDetailsViewController * top = [[TopicDetailsViewController alloc] init];
            [dic setObject:[dic objectForKey:@"typeId"] forKey:@"themeId"];
            top.m_dic = dic;
            [self.navigationController pushViewController:top animated:YES];
            [top release];
        }
            break;
            
        default:
            break;
    }
    
}

- (void)setExtraCellLineHidden: (UITableView *)tableView
{
    UIView *view = [UIView new];
    view.backgroundColor = [UIColor clearColor];
    [tableView setTableFooterView:view];
    [view release];
    UIView *footView = [Common createTableFooter];
    [view addSubview:footView];
}

//停止加载TableView
- (void)endOfResultList
{
    UILabel *lab = (UILabel*)[newsListTableView.tableFooterView viewWithTag:tableFooterViewLabTag];
    lab.text = @"已到底部";
    lab.frame = CGRectMake(0, 0, kDeviceWidth, 45);
    UIActivityIndicatorView *activi = (UIActivityIndicatorView*)[newsListTableView.tableFooterView viewWithTag:tableFooterViewActivityTag];
    [activi removeFromSuperview];
    //    activi.hidden = YES;
}

- (void)getDataSource
{
	m_loadingMore = YES;
    NSString *limitStart = [NSString stringWithFormat:@"%d",m_nowPage];
    
    NSMutableDictionary *requestDic =  [[NSMutableDictionary alloc] initWithCapacity:0];
    [requestDic setValue:limitStart forKey:@"pageNo"];
    [requestDic setValue:[NSNumber numberWithInt:g_everyPageNum] forKey:@"pageSize"];
    [[CommonHttpRequest defaultInstance] sendNewPostRequest:GET_ALL_POST_LIST values:requestDic requestKey:GET_ALL_POST_LIST delegate:self controller:newsListTableView actiViewFlag:m_array.count>0?0:1 title:nil];
    m_nowPage++;
    [requestDic release];
    
}


- (void)didFinishSuccess:(ASIHTTPRequest *)loader
{
    NSString *responseString = [loader responseString];
    NSDictionary *dic = [responseString KXjSONValueObject];
    NSArray *resultArray = dic[@"rs"];
    NSLog(@"%@",dic);
    if (![[dic objectForKey:@"state"] intValue])
    {
        if ([loader.username isEqualToString:GET_ALL_POST_LIST]){
            resultArray = [dic[@"rs"] objectForKey:@"list"];
            if (m_nowPage == 2) {
                [m_array removeAllObjects];
            }
            if(resultArray.count == 0 ){
                [self endOfResultList];
            }else{
                if(resultArray.count < [REQUEST_PAGE_NUM intValue])
                {
                    [self endOfResultList];
				}
				else {
					m_loadingMore = NO;
				}
                [m_array addObjectsFromArray:resultArray];
                [newsListTableView reloadData];
            }
            [self finishRefresh];
        }
        else if ([loader.username isEqualToString:GET_ADVERT_LIST]) {
            [m_arrayImage removeAllObjects];
            
            [m_arrayImage addObjectsFromArray:resultArray];
            [self createAdvertising:m_arrayImage];
        }
    } else {
        
        if ([loader.username isEqualToString:GET_ALL_POST_LIST]){
            m_loadingMore = NO;
        }
    }
}

- (void)didFinishFail:(ASIHTTPRequest *)loader
{
    NSLog(@"fail");
    _isloading = NO;
    [self endOfResultList];
    [self finishRefresh];
    if ([loader.username isEqualToString:GET_ALL_POST_LIST]){
        m_loadingMore = NO;
    }
}

#pragma mark - EGORefreshTableHeaderDelegate
//收起刷新
- (void)finishRefresh{
    
    [_headView egoRefreshScrollViewDataSourceDidFinishedLoading:newsListTableView];
    _isloading = NO;
}

- (void)egoRefreshTableHeaderDidTriggerRefresh:(EGORefreshTableHeaderView *)view
{
	if (_isloading) {
		return;
	}
    _isloading = YES;
    //下拉刷新 开始请求新数据 ---原数据清除
    m_nowPage = 1;//复位
//    [self loadAdvData];
    [self getDataSource];
}

- (BOOL)egoRefreshTableHeaderDataSourceIsLoading:(EGORefreshTableHeaderView *)view
{
    return _isloading;
}

- (NSDate *)egoRefreshTableHeaderDataSourceLastUpdated:(EGORefreshTableHeaderView *)view
{
    return [NSDate date];
}

- (void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    [_headView egoRefreshScrollViewDidScroll:scrollView];
    
//	float nowY = scrollView.contentOffset.y;
//	float absy = m_lastScrollOfferY - nowY;
//	
//	if (nowY <= 10) {
//		if (!m_down) {
//            [[NSNotificationCenter defaultCenter] postNotificationName:@"setTabbarShowHiddle" object:[NSNumber numberWithBool:NO]];
//			m_isTabbarDown = NO;
//			m_down = YES;
//		}
//		return;
//	}
//	if (fabsf(absy) > 10) {
//		if (absy > 0) {
//			m_isTabbarDown = YES;
//		} else {
//			if (m_down) {
//                [[NSNotificationCenter defaultCenter] postNotificationName:@"setTabbarShowHiddle" object:[NSNumber numberWithBool:YES]];
//				m_down = NO;
//			}
//			m_isTabbarDown = NO;
//		}
//		m_lastScrollOfferY = nowY;
//	}
}

//UIScrollView滚动停止
- (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView
{
	m_lastScrollOfferY = scrollView.contentOffset.y;
    if(m_loadingMore == NO)
    {
        // 下拉到最底部时显示更多数据
        if( !m_loadingMore && scrollView.contentOffset.y >= ( scrollView.contentSize.height - scrollView.frame.size.height - 45) )
        {
            [self getDataSource];
        }
    }
//    NSArray *visiblePaths = [newsListTableView indexPathsForVisibleRows];
//    [m_OperationQueue loadImagesForOnscreenRows:visiblePaths isRow:NO];
}

//UIScrollView松开手指
- (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate
{
    [_headView egoRefreshScrollViewDidEndDragging:scrollView];
    
//	if (!decelerate)//手指松开且不滚动
//	{
//		NSArray *visiblePaths = [newsListTableView indexPathsForVisibleRows];
//		[m_OperationQueue loadImagesForOnscreenRows:visiblePaths isRow:NO];
//	}
//    else if (m_isTabbarDown && !m_down) {
//        [[NSNotificationCenter defaultCenter] postNotificationName:@"setTabbarShowHiddle" object:[NSNumber numberWithBool:NO]];
//		m_down = YES;
//    }
}

- (void)showImageForDownload:(NSDictionary *)imageDicInfo
{
	if (m_isClose) {
		return;
	}
	
	NSMutableDictionary *dicCansu = [[NSMutableDictionary alloc] initWithDictionary:imageDicInfo];
	[self performSelectorOnMainThread:@selector(setSellerTableCellImage:) withObject:dicCansu waitUntilDone:YES];
}

- (void)setSellerTableCellImage:(NSDictionary*)canshu
{
	UIImage *image = [canshu objectForKey:@"image"];
	NSIndexPath *indexPath = [canshu objectForKey:@"indexPath"];
	[canshu release];
    [newsListTableView reloadData];
    
	ExpertTopicTableViewCell1 *cell = (ExpertTopicTableViewCell1*)[newsListTableView cellForRowAtIndexPath:indexPath];
    //	[cell setIconImage:[UIImage imageWithData:image]];
	[cell setBackImage:image];
}

#pragma mark - UITableViewDataSource And Delegate

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return m_array.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return 1;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 0.1;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 10;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return (170/320.f)*kDeviceWidth+100;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *identifier = @"topicCell";
    ExpertTopicTableViewCell1 *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
    if(!cell){
        cell = [[[ExpertTopicTableViewCell1 alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifier] autorelease];
        //cell点击背景颜色
        UIView *view = [[UIView alloc] initWithFrame:CGRectZero];
        cell.backgroundView = view;
        [view release];
        cell.selectedBackgroundView = [Common creatCellBackView];
    }
    
    NSMutableDictionary *dataDic = m_array[indexPath.section];
    [dataDic setObject:self forKey:@"object"];
    [cell setM_infoDic:dataDic];
    
//    NSString *imagePath  = dataDic[@"newTitleFilepath"];
    NSString *imagePath = [dataDic[@"newTitleFilepath"] stringByAppendingString:@"?imageView2/1/w/600/h/340"];
    UIImage *defaul = [UIImage imageNamed:@"common.bundle/common/conversation_logo.png"];
    [cell.backImage sd_setImageWithURL:[NSURL URLWithString:imagePath] placeholderImage:defaul];
    
//    if ([imagePath length]) {
//        UIImage *image = [m_OperationQueue getImageForUrl:imagePath];
//        if (image) {
//            [cell setBackImage:image];
//        }else {
//            if (tableView.dragging == NO && tableView.decelerating == NO)//table停止不再滑动的时候下载图片（先用默认的图片来代替Cell的image）
//            {
//                [m_OperationQueue startIconDownload:imagePath forIndexPath:indexPath setNo:0];
//            }
//            [cell setBackImage:[UIImage imageNamed:@"common.bundle/common/conversation_logo.png"]];
//        }
//    }
//    else {
//        [cell setBackImage:[UIImage imageNamed:@"common.bundle/common/conversation_logo.png"]];
//    }

    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];

    ExpertTopicTableViewCell1 *cell = (ExpertTopicTableViewCell1*)[tableView cellForRowAtIndexPath:indexPath];
    int num = (int)[cell.m_labCount.text integerValue]+1;
    cell.m_labCount.text = [NSString stringWithFormat:@"%d",num];

    OneExpertViewController *oneExpertVC = [[OneExpertViewController alloc] init];
    oneExpertVC.postId = m_array[indexPath.section][@"postId"];
    [self.navigationController pushViewController:oneExpertVC animated:YES];
    [oneExpertVC release];
    
}

- (UIView*)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    UIView * headerView= [[[UIView alloc]init]autorelease];
    headerView.backgroundColor = [UIColor clearColor];
    return headerView;
}

- (CGSize)getSizeWithString:(NSString *)string font:(UIFont *)font constrainSize:(CGSize)constrsize
{
    CGSize size = [string sizeWithFont:font constrainedToSize:constrsize lineBreakMode:NSLineBreakByWordWrapping|NSLineBreakByTruncatingTail];
    return size;
}

- (void)setUMtitle:(NSString*)titleS
{
    if ([titleS isEqualToString:@"半糖主义"]) {
        self.log_pageID = 129;
    }else if ([titleS isEqualToString:@"牛牛话匣"]) {
        self.log_pageID = 133;
    }else if ([titleS isEqualToString:@"糖糖早知道"]) {
        self.log_pageID = 130;
    }else if ([titleS isEqualToString:@"瘦身志"]) {
        self.log_pageID = 131;
    }else if ([titleS isEqualToString:@"糖人的日常"]) {
        self.log_pageID = 132;
    }else if ([titleS isEqualToString:@"公开课"]) {
        self.log_pageID = 134;
    }else if ([titleS isEqualToString:@"肌喜糖"]) {
        self.log_pageID = 135;
    }else if ([titleS isEqualToString:@"糖吉歌德"]) {
        self.log_pageID = 136;
    }else if ([titleS isEqualToString:@"百家讲糖"]) {
        self.log_pageID = 138;
    }else if ([titleS isEqualToString:@"膳食坊"]) {
        self.log_pageID = 137;
    }
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
 #pragma mark - Navigation
 
 // In a storyboard-based application, you will often want to do a little preparation before navigation
 - (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender
 {
 // Get the new view controller using [segue destinationViewController].
 // Pass the selected object to the new view controller.
 }
 */


@end
