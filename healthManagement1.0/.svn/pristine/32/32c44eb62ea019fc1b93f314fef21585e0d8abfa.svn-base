//
//  EditHomeOrderView.m
//  jiuhaohealth2.1
//
//  Created by 徐国洪 on 14-11-27.
//  Copyright (c) 2014年 xuGuohong. All rights reserved.
//

#import "EditHomeOrderView.h"
#import "HomeOrderCellTableViewCell.h"
#import "CommonHttpRequest.h"

@implementation EditHomeOrderView
//@synthesize m_array;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
	self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
	if (self) {
		self.title = @"编辑栏目";
		
		UIBarButtonItem *left = [Common createNavBarButton:self setEvent:@selector(closeNowView) withNormalImge:@"common.bundle/nav/back_nor.png" andHighlightImge:@"common.bundle/nav/back_pre.png"];
		self.navigationItem.leftBarButtonItem = left;
		
		UIBarButtonItem *right = [Common createNavBarButton:self setEvent:@selector(submitHomeOrder) withNormalImge:@"common.bundle/nav/data_save.png" andHighlightImge:@"common.bundle/nav/data_save_p.png"];
		self.navigationItem.rightBarButtonItem = right;
	}
	return self;
}

- (BOOL)closeNowView
{
    [super closeNowView];
    
	[self dismissViewControllerAnimated:YES completion:nil];
	return NO;
}

-(void)setM_array:(NSMutableArray *)m_sequenceArray
{
    if (_m_array != m_sequenceArray && m_sequenceArray)
    {
        NSArray* trueDeepCopyArray = [NSKeyedUnarchiver unarchiveObjectWithData:
                                      [NSKeyedArchiver archivedDataWithRootObject: m_sequenceArray]];
        _m_array = [[NSMutableArray alloc]initWithArray:trueDeepCopyArray];
    }
}

- (void)viewDidLoad
{
	self.view.backgroundColor = [CommonImage colorWithHexString:VERSION_BACKGROUD_COLOR2];
	
	m_tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, kDeviceWidth, kDeviceHeight)];
	m_tableView.delegate = self;
	m_tableView.dataSource = self;
	m_tableView.rowHeight = 45;
	m_tableView.backgroundColor = [UIColor clearColor];
	m_tableView.separatorStyle = UITableViewCellSeparatorStyleSingleLine;
	m_tableView.separatorColor = [CommonImage colorWithHexString:VERSION_LIN_COLOR_QIAN];
	[Common setExtraCellLineHidden:m_tableView];
	[m_tableView setEditing:YES];
	[self.view addSubview:m_tableView];
}

- (void)setEditHomeBlock:(EditHomeOrderBlock)_handler
{
	m_inBlobk = [_handler copy];
}

- (void)submitHomeOrder
{
	NSString *sequence = @"";
	NSArray *arraytest;
	for (NSDictionary *dic in self.m_array) {
		arraytest = [[dic allValues] objectAtIndex:0];
		sequence = [sequence stringByAppendingFormat:@"%@:%@,", arraytest[0], arraytest[1]];
	}
	
	NSMutableDictionary *dic = [NSMutableDictionary dictionary];
	[dic setObject:g_nowUserInfo.userid forKey:@"userid"];
    [dic setObject:sequence forKey:@"sequence"];
    [dic setObject:@"3" forKey:@"type"];
	[[CommonHttpRequest defaultInstance] sendNewPostRequest:SET_HOME_SEQUENCE values:dic requestKey:SET_HOME_SEQUENCE delegate:self controller:self actiViewFlag:1 title:nil];
}

#pragma mark -
#pragma mark Table Data Source Methods
//Sections
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
	return 1;
}

//获取数据条数
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
	return [self.m_array count];
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
	return 45;
}

//返回YES，表示支持单元格的移动
- (BOOL)tableView:(UITableView *)tableView canMoveRowAtIndexPath:(NSIndexPath *)indexPath
{
	return YES;
}

//单元格返回的编辑风格，包括删除 添加 和 默认  和不可编辑三种风格
- (UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath
{
	return UITableViewCellEditingStyleNone;
}

- (void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)sourceIndexPath toIndexPath:(NSIndexPath *)destinationIndexPath
{
//    从数组中读取需要移动行的数据
//	NSMutableArray *showArray = [m_array objectAtIndex:sourceIndexPath.section];
	id object = [self.m_array objectAtIndex:sourceIndexPath.row];
//    在数组中移动需要移动的行的数据
	[self.m_array removeObjectAtIndex:sourceIndexPath.row];
	
//	NSMutableArray *hideArray = [m_array objectAtIndex:destinationIndexPath.section];
	[self.m_array insertObject:object atIndex:destinationIndexPath.row];
}

//填充数据源
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
	static NSString *type = @"Cell";
	HomeOrderCellTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:type];
	if ( !cell )
	{
		cell = [[[HomeOrderCellTableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:type] autorelease];
	}
	
//	NSArray *array = [m_array objectAtIndex:indexPath.section];
	
	NSMutableDictionary *item = [self.m_array objectAtIndex:indexPath.row];
	
	[cell setM_dicInfo:item];
	
	return cell;
}

#pragma mark - NetWork Function

- (void)didFinishFail:(ASIHTTPRequest *)loader
{
	[Common TipDialog:@"网络请求失败"];
}

- (void)didFinishSuccess:(ASIHTTPRequest *)loader
{
	NSString *responseString = [loader responseString];
	NSDictionary *dic = [responseString KXjSONValueObject];
	if (![[dic objectForKey:@"state"] intValue])
	{
		if([loader.username isEqualToString:SET_HOME_SEQUENCE]){
			[self closeNowView];
			m_inBlobk(YES);
		}
	}
	else {
		[Common TipDialog:[dic objectForKey:@"msg"]];
	}
}

- (void)dealloc
{
	[m_tableView release];
//    [self.m_array release];
    self.m_array = nil;
	[m_inBlobk release];
	
	[super dealloc];
}

/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect {
    // Drawing code
}
*/

@end
