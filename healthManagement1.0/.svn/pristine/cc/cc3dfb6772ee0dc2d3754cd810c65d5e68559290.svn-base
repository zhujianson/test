//
//  PostingViewController.m
//  jiuhaohealth4.0
//
//  Created by xjs on 15/4/16.
//  Copyright (c) 2015年 xuGuohong. All rights reserved.
//

#import "PostingViewController.h"
#import "KXTextView.h"
#import "GetToken.h"
#import "LoadingAnimation.h"


#define MORE_PIICKER 4
#define WEIGHT_CLEARANCE (kDeviceWidth-60*4)/5

@implementation PostingViewController
{
    KXTextView * m_titleView;//内容
    KXTextView * m_textView;//标题
    int imageCount;
    UIView * imageBackView;
//    UIScrollView * m_scroll;
    NSMutableArray * imageArr;
    UIButton *selectedBtn;
    CGFloat originY;
    BOOL  m_isLoading;;
    UIButton * cleanBtn;

}

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        
        UIButton *butMail = [UIButton buttonWithType:UIButtonTypeCustom];
        [butMail setTitleColor:[CommonImage colorWithHexString:COLOR_FF5351] forState:UIControlStateNormal];
        [butMail setTitle:@"关闭" forState:UIControlStateNormal];
        butMail.titleLabel.font = [UIFont systemFontOfSize:17];
        butMail.frame = CGRectMake(0, 0, 44, 44);
        [butMail setTitleEdgeInsets:UIEdgeInsetsMake(0, -10, 0, 0)];
        [butMail addTarget:self action:@selector(cancel) forControlEvents:UIControlEventTouchUpInside];
        UIBarButtonItem* left = [[UIBarButtonItem alloc] initWithCustomView:butMail];
        self.navigationItem.leftBarButtonItem = left;
        [left release];
        
        butMail = [UIButton buttonWithType:UIButtonTypeCustom];
        [butMail setTitleColor:[CommonImage colorWithHexString:COLOR_FF5351] forState:UIControlStateNormal];
        [butMail setTitle:@"发布" forState:UIControlStateNormal];
        butMail.titleLabel.font = [UIFont systemFontOfSize:17];
        butMail.frame = CGRectMake(0, 0, 44, 44);
//        butMail.backgroundColor = [UIColor yellowColor];
        [butMail setTitleEdgeInsets:UIEdgeInsetsMake(0, 10, 0, 0)];
        [butMail addTarget:self action:@selector(sendPosting) forControlEvents:UIControlEventTouchUpInside];
        UIBarButtonItem* right = [[UIBarButtonItem alloc] initWithCustomView:butMail];
        self.navigationItem.rightBarButtonItem = right;
        [right release];

    }
    return self;
}

- (void)dealloc{
    [m_textView release];
    [m_titleView release];
    [imageArr release];
    [super dealloc];
}

- (void)viewDidLoad
{
    [super viewDidLoad];

    self.log_pageID = 418;
    
    m_isLoading = NO;
    imageArr = [[NSMutableArray alloc]init];

    self.title = @"发布帖子";
    originY = 0;
    if(_isFromSteperView){
        UILabel *titleLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, kDeviceWidth, 45)];
        titleLabel.backgroundColor = [CommonImage colorWithHexString:@"f5f5f5"];
        titleLabel.text = [NSString stringWithFormat:@"发布至圈子：%@",self.groupIdsDic.allKeys[0]];
        titleLabel.font = [UIFont systemFontOfSize:15.0f];
        titleLabel.textColor = [CommonImage colorWithHexString:@"999999"];
        titleLabel.textAlignment = NSTextAlignmentCenter;
        [self.view addSubview:titleLabel];
        [titleLabel release];
        originY = 45;
    }
    
    UIView * whiteView = [[UIView alloc]initWithFrame:CGRectMake(0, 0+originY, kDeviceWidth, 45)];
    whiteView.layer.borderWidth = 0.5;
    whiteView.layer.borderColor = [CommonImage colorWithHexString:LINE_COLOR].CGColor;
    whiteView.backgroundColor = [UIColor whiteColor];
    
    [self.view addSubview:whiteView];
    m_titleView = [[KXTextView alloc] initWithFrame:CGRectMake(10, 0, kDeviceWidth-20, whiteView.height)];
    m_titleView.backgroundColor = [UIColor clearColor];
    [m_titleView setEditable:YES];
    m_titleView.delegate = self;
    m_titleView.returnKeyType = UIReturnKeyDone;
    m_titleView.textColor = [CommonImage colorWithHexString:@"#333333"];
    m_titleView.font = [UIFont systemFontOfSize:16];
    m_titleView.placeholder = NSLocalizedString(@"请输入标题 (2-40个字)", nil);
    m_titleView.placeholderColor = [CommonImage colorWithHexString:@"#cccccc"];
    m_titleView.placeHolderLabel.font = [UIFont systemFontOfSize:16];
    [m_titleView setCenterOffset];
    
    [whiteView addSubview:m_titleView];
    UILabel * numLab = [Common createLabel:CGRectMake(kDeviceWidth-100, whiteView.height-20,90, 20) TextColor:@"cccccc" Font:[UIFont systemFontOfSize:12] textAlignment:NSTextAlignmentRight labTitle:[NSString stringWithFormat:@"%lu/40",(unsigned long)[m_titleView.text length]]];
    numLab.tag = 66;
    [whiteView addSubview:numLab];
    [m_titleView becomeFirstResponder];
    [whiteView release];
    
    whiteView = [[UIView alloc]initWithFrame:CGRectMake(0, 55+originY, kDeviceWidth, 165)];
    whiteView.backgroundColor = [UIColor whiteColor];
    whiteView.layer.borderWidth = 0.5;
    whiteView.layer.borderColor =[CommonImage colorWithHexString:LINE_COLOR].CGColor;
    
    [self.view addSubview:whiteView];
    m_textView = [[KXTextView alloc] initWithFrame:CGRectMake(10, 0, kDeviceWidth-20, whiteView.height-20)];
    m_textView.backgroundColor = [UIColor clearColor];
    [m_textView setEditable:YES];
    m_textView.delegate = self;
    m_textView.returnKeyType = UIReturnKeyDone;
    m_textView.textColor = [CommonImage colorWithHexString:@"#333333"];
    m_textView.font = [UIFont systemFontOfSize:16];
    m_textView.placeholder = NSLocalizedString(@"请输入内容 (4-5000个字)", nil);
    m_textView.placeholderColor = [CommonImage colorWithHexString:@"#cccccc"];
    m_textView.placeHolderLabel.font = [UIFont systemFontOfSize:16];

    [whiteView addSubview:m_textView];
    numLab = [Common createLabel:CGRectMake(kDeviceWidth-100, whiteView.height-20,90, 20) TextColor:@"cccccc" Font:[UIFont systemFontOfSize:12] textAlignment:NSTextAlignmentRight labTitle:[NSString stringWithFormat:@"%lu/5000",(unsigned long)[m_textView.text length]]];
    numLab.tag = 67;
    [whiteView addSubview:numLab];

    [whiteView release];

    NSDictionary * dic = [[NSUserDefaults standardUserDefaults] objectForKey:[NSString stringWithFormat:@"addPosting_%@",g_nowUserInfo.userid]];
    [self setImageWithDate:nil];

    if (dic) {
        m_titleView.text = dic[@"title"];
        m_textView.text = dic[@"content"];
        if (dic[@"image"]) {
            [self getMyPhoto:dic[@"image"]];
        }
    }
    cleanBtn = [Common createKeyboardClean];
    [cleanBtn addTarget:self action:@selector(cleanBtn:) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:cleanBtn];

}


- (void)cancel
{
    if ([m_textView.text length]>0 || [m_titleView.text length]>0)
    {
        UIAlertView * alert = [[UIAlertView alloc]initWithTitle:@"提示" message:@"帖子尚未发布，是否保存?" delegate:self cancelButtonTitle:@"确定" otherButtonTitles:@"取消", nil];
        [alert show];
        [alert release];
    }else{
        [[NSUserDefaults standardUserDefaults] removeObjectForKey:[NSString stringWithFormat:@"addPosting_%@",g_nowUserInfo.userid]];
        [[NSUserDefaults standardUserDefaults] synchronize];
        [self.navigationController dismissViewControllerAnimated:YES completion:nil];
    }
}

- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    if (!buttonIndex) {
        NSMutableDictionary * dic = [NSMutableDictionary dictionary];
        [dic setObject:m_textView.text forKey:@"content"];
        [dic setObject:m_titleView.text forKey:@"title"];
        NSArray * arr = [self saveImage];
        [dic setObject:arr forKey:@"image"];
        [[NSUserDefaults standardUserDefaults] setObject:dic forKey:[NSString stringWithFormat:@"addPosting_%@",g_nowUserInfo.userid]];
        [[NSUserDefaults standardUserDefaults] synchronize];
    }else{
        [[NSUserDefaults standardUserDefaults] removeObjectForKey:[NSString stringWithFormat:@"addPosting_%@",g_nowUserInfo.userid]];
        [[NSUserDefaults standardUserDefaults] synchronize];
    }
    [self.navigationController dismissViewControllerAnimated:YES completion:nil];
}


- (void)sendPosting
{
    if (m_isLoading) {
        return;
    }
    NSString *contentString = [m_titleView.text stringByReplacingOccurrencesOfString:@" " withString:@""];
    NSString *contentString2 = [m_textView.text stringByReplacingOccurrencesOfString:@" " withString:@""];
    NSLog(@"%@--%@",contentString,contentString2);

    if ([NSString isContainsEmoji:contentString] || [NSString isContainsEmoji:contentString2])
    {
        [Common TipDialog:NSLocalizedString(@"暂不支持表情信息", nil)];
        return;
    }

    if ([m_titleView.text length]<2) {
        [Common TipDialog2:@"标题字数必须大于2位"];
        [m_titleView becomeFirstResponder];
        return;
    }
    if ([m_textView.text length]<4) {
        [Common TipDialog2:@"内容字数必须大于4位"];
        [m_textView becomeFirstResponder];
        return;
    }
    NSMutableArray * arr = [[[NSMutableArray alloc]init]autorelease];
    if (imageArr.count == 0) {
        [self setLoadingWithDic:nil Nsarry:arr Url:nil];
        return;
    }
    
     __block LoadingAnimation*loadViews = [[LoadingAnimation alloc]initWithFrame:CGRectMake(0, 0, kDeviceWidth, self.view.frame.size.height)];
    loadViews.center = CGPointMake(self.view.width/2, (self.view.height-40)/2);
    [self.view addSubview:loadViews];
    __block  NSMutableArray * arr2 = [[NSMutableArray alloc]init];
    for (int i = 0; i<imageArr.count; i++){
        UIImage * image = imageArr[i];
        if (!image) {
            break;
        }
        NSData *data = UIImageJPEGRepresentation(image, Define_picScale);
        [GetToken submitData:data withBlock:^(BOOL isOK,NSString*st) {
            NSLog(@"+++++++++++++++++++++++++++++++%@",st);
            [arr addObject:st];
            if (!isOK) {
                if (arr.count==imageArr.count) {
                    [loadViews stopAnimating];
                    [loadViews removeFromSuperview];
                    [loadViews release];
                    loadViews = nil;
                    [Common TipDialog2:@"图片上传失败，请检查网络是否正常!"];
                }else{
                    [arr2 addObject:st];
                }
            }else
                if (arr.count==imageArr.count) {
                    [loadViews stopAnimating];
                    [loadViews removeFromSuperview];
                    [loadViews release];
                    loadViews = nil;

                    if (!arr2.count) {
                        [self setLoadingWithDic:nil Nsarry:arr Url:nil];
                    }else{
                        [Common TipDialog2:@"图片上传失败，请检查网络是否正常!"];
                    }
                    [arr2 release];
                }
        } withName:nil];
    }
}

- (void)setLoadingWithDic:(NSMutableDictionary*)posTData Nsarry:(NSArray*)arr Url:(NSString*)url
{
    m_isLoading = YES;
    NSMutableDictionary *dic = [NSMutableDictionary dictionary];
    [dic setObject:m_titleView.text forKey:@"title"];
    [dic setObject:m_textView.text forKey:@"content"];
    if(_isFromSteperView){
         [dic setObject:self.groupIdsDic.allValues[0] forKey:@"groupId"];
    }else{
        [dic setObject:self.m_superDic[@"groupId"] forKey:@"groupId"];
    }
    [dic setObject:arr forKey:@"pictureArray"];
    [[CommonHttpRequest defaultInstance] sendNewPostRequest:ADDGROUP_POST_URL values:dic requestKey:ADDGROUP_POST_URL delegate:self controller:self actiViewFlag:1 title:NSLocalizedString(@"发帖中...", nil)];
}

- (void)photo
{
    if (imageCount==MORE_PIICKER) {
        [Common TipDialog2:[NSString stringWithFormat:@"最多选择%d张图片",MORE_PIICKER]];
        return;
    }
    [self touchesBegan:nil withEvent:nil];
    
    ImagePicker *imagePicker = [[ImagePicker alloc]initWithId:self];
    imagePicker.sendTitle =  @"完成";
    imagePicker.selectHeadPhoto = NO;
    // 选择图片的最大数
    imagePicker.maxCount =MORE_PIICKER-imageCount;
    [imagePicker setPickerViewBlock:^(id content) {
        if ([content isKindOfClass:[NSArray class]])
        {
            [self actionWithAsstes:content];
            
        }else if ([content isKindOfClass:[UIImage class]])
        {
            UIImage * image = content;
            imageCount++;
            [self setImageWithDate:image];
        }
    }];
}

// 代理回调方法
- (void)actionWithAsstes:(NSArray *)assets{
    
    for (ALAsset * asset in assets)
    {
        if ([asset isKindOfClass:[ALAsset class]]) {
            imageCount++;
            //           UIImage * image = [UIImage imageWithCGImage:[asset thumbnail]];
            CGImageRef ref = [[asset  defaultRepresentation] fullScreenImage];
            UIImage *image = [UIImage imageWithCGImage:ref];
            [self setImageWithDate:image];
        }
    }
}

- (void)initImageCount
{
    imageCount = 1;
}

- (void)setImageWithDate:(UIImage*)imageData
{
    UILabel * lab = (UILabel*)[self.view viewWithTag:33];
    
    if (!imageBackView) {
        
        imageBackView = [[UIView alloc]initWithFrame:CGRectMake(0,230+originY, kDeviceWidth, (kDeviceHeight-230)<550?550:(kDeviceHeight-230))];
        imageBackView.backgroundColor = [UIColor whiteColor];
        [self.view addSubview:imageBackView];
        lab = [Common createLabel:CGRectMake(0, 0, imageBackView.width, 40) TextColor:@"999999" Font:[UIFont systemFontOfSize:15] textAlignment:NSTextAlignmentCenter labTitle:@"已选择1/4张"];
        [imageBackView addSubview:lab];
        lab.tag = 33;
        
        
//        m_scroll.contentSize = CGSizeMake(kDeviceWidth, imageBackView.top+140);
    }else{
        imageBackView.hidden = NO;
    }
    lab.text = [NSString stringWithFormat:@"已选择%d/4张",imageCount];
    
    UIButton * addBtn = (UIButton*)[self.view viewWithTag:1100];
    if (!addBtn) {
        addBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        addBtn.tag = 1100;
        addBtn.frame = CGRectMake(WEIGHT_CLEARANCE, 40, 60, 60);
        addBtn.backgroundColor = [CommonImage colorWithHexString:@"f2f2f2"];
        [addBtn setImage:[UIImage imageNamed:@"common.bundle/diary/V4.0/diaryAdd.png"] forState:UIControlStateNormal];
        
        [addBtn addTarget:self action:@selector(photo) forControlEvents:UIControlEventTouchUpInside];
        [imageBackView addSubview:addBtn];
    }
    if (!imageData) {
        return;
    }

    UIImageView * imageView = [[UIImageView alloc]initWithFrame:addBtn.frame];
    imageView.image = imageData;
    imageView.userInteractionEnabled = YES;
    imageView.tag = 400+imageCount;
    [imageBackView addSubview:imageView];
    [imageView release];
    
    UITapGestureRecognizer * tap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(gestureRecognizerHandle:)];
    tap.view.tag = imageView.tag+55;
    [imageView addGestureRecognizer:tap];
    [tap release];

    
    [imageArr addObject:imageView.image];
    
    //删除图片
    UIButton * Reduction  = [UIButton buttonWithType:UIButtonTypeCustom];
    Reduction.frame = CGRectMake(imageView.right-10, imageView.top-10, 20, 20);
    [Reduction setImage:[UIImage imageNamed:@"common.bundle/diary/dairy_content_icon_delete.png"] forState:UIControlStateNormal];
    [Reduction addTarget:self action:@selector(Reduction:) forControlEvents:UIControlEventTouchUpInside];
    Reduction.tag = 300+imageCount;
    [imageBackView addSubview:Reduction];
    
//    if (imageCount==4) {
//        addBtn.frame = [Common rectWithOrigin:addBtn.frame x:WEIGHT_CLEARANCE y:40+WEIGHT_CLEARANCE+60];
//    }else if(imageCount==8){
//        addBtn.frame = [Common rectWithOrigin:addBtn.frame x:WEIGHT_CLEARANCE y:40+(WEIGHT_CLEARANCE+60)*2];
//    }else
    if (imageCount==MORE_PIICKER) {
        addBtn.hidden = YES;
    }
    addBtn.frame = [Common rectWithOrigin:addBtn.frame x:addBtn.bottomRight.x+WEIGHT_CLEARANCE y:0];

}

- (void)Reduction:(UIButton*)btn
{
    UIImageView*image = (UIImageView*)[self.view viewWithTag:btn.tag+100];
    [btn removeFromSuperview];
    [imageArr removeObject:image.image];
    [image removeFromSuperview];
    
    CGFloat x,y,z;
    UIButton * remoBtn;
    for (int i=(int)btn.tag+100;i<btn.tag+imageCount+100; i++) {
        image = (UIImageView*)[self.view viewWithTag:i+1];
        if (image) {
            remoBtn = (UIButton*)[self.view viewWithTag:image.tag-100];
            x = kDeviceWidth-image.size.width-WEIGHT_CLEARANCE;
            y = image.origin.y-image.size.width-WEIGHT_CLEARANCE;
            z = image.origin.x-image.size.width-WEIGHT_CLEARANCE;
            if (image.origin.x==WEIGHT_CLEARANCE) {
                image.frame = [Common rectWithOrigin:image.frame x:x y:y];
            }else{
                image.frame = [Common rectWithOrigin:image.frame x:z y:0];
            }
            remoBtn.frame = [Common rectWithOrigin:remoBtn.frame x:image.right-10 y:image.top-10];
            image.tag = i;
            remoBtn.tag = i - 100;
        }else{
            break;
        }
    }
    
    imageCount--;
    UILabel * lab = (UILabel*)[self.view viewWithTag:33];
    lab.text = [NSString stringWithFormat:@"已选择%d/4张",imageCount];
    UIButton * addBtn = (UIButton*)[self.view viewWithTag:1100];
//    if (imageCount==0) {
//        imageBackView.hidden = YES;
//        addBtn.frame = [Common rectWithOrigin:addBtn.frame x:WEIGHT_CLEARANCE y:0];
//    }else{
        x = kDeviceWidth-addBtn.size.width-WEIGHT_CLEARANCE;
        y = addBtn.origin.y-addBtn.size.width-WEIGHT_CLEARANCE;
        z = addBtn.origin.x-addBtn.size.width-WEIGHT_CLEARANCE;
        addBtn.hidden = NO;

        CGFloat time = 0.3f;
        if (imageCount == 3) {
            time = 0;
        }
        [UIView animateWithDuration:time animations:^{
            //        if (addBtn.origin.x==WEIGHT_CLEARANCE) {
            //            addBtn.frame = [Common rectWithOrigin:addBtn.frame x:x y:y];
            //        }else{
            addBtn.frame = [Common rectWithOrigin:addBtn.frame x:z y:0];
            //        }
        }];
//    }

}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    /* No longer listen for keyboard */
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil];
}
- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    /* No longer listen for keyboard */
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillShowNotification object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillHideNotification object:nil];
}

- (void	)keyboardWillShow:(NSNotification *)aNotification
{
    NSDictionary *info = [aNotification userInfo];
    NSValue *aValue = [info objectForKey:UIKeyboardFrameEndUserInfoKey];
    CGSize keyboardSize = [aValue CGRectValue].size;

    CGFloat h = kDeviceHeight-keyboardSize.height-45;
    [UIView animateWithDuration:0.3f animations:^{
        if (kDeviceHeight<500 && [m_textView isFirstResponder]) {
        self.view.transform = CGAffineTransformMakeTranslation(0, -55);
        cleanBtn.frame = [Common rectWithOrigin:cleanBtn.frame x:0 y:170];
        }else{
        cleanBtn.frame = [Common rectWithOrigin:cleanBtn.frame x:0 y:h];
        }
    }];

}

- (void)keyboardWillHide:(NSNotification *)aNotification
{
    [UIView animateWithDuration:0.2 animations:^ {
        self.view.transform = CGAffineTransformMakeTranslation(0, 0);
        cleanBtn.frame = [Common rectWithOrigin:cleanBtn.frame x:0 y:kDeviceHeight];
    }];
}
- (void)cleanBtn:(UIButton*)btn
{
    [self touchesBegan:nil withEvent:nil];
}

#pragma mark -
#pragma mark UITextView Delegate Function
- (BOOL)textView:(UITextView *)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text
{
    if ( [text isEqualToString:@"\n"] )
        [textView resignFirstResponder];
    return YES;
}

- (void)textViewDidChangeSelection:(UITextView *)textView
{
    if (textView == m_titleView) {
        if (textView.text.length > 40) {
            textView.text = [textView.text substringToIndex:40];
        }
        UILabel * lab = (UILabel*)[self.view viewWithTag:66];
        lab.text = [NSString stringWithFormat:@"%lu/40",(unsigned long)[textView.text length]];
        
    }else{
        if (textView.text.length > 5000) {
            textView.text = [textView.text substringToIndex:5000];
        }
        UILabel * lab = (UILabel*)[self.view viewWithTag:67];
        lab.text = [NSString stringWithFormat:@"%lu/5000",(unsigned long)[textView.text length]];
    }
    NSLog(@"%@", textView.text);
}

- (void)textViewDidBeginEditing:(UITextView *)textView
{
    if (textView == m_textView && kDeviceHeight<500) {
        [self keyboardWillShow:nil];
    }
}

- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event
{
    [m_textView resignFirstResponder];
    [m_titleView resignFirstResponder];
}

- (void)didFinishSuccess:(ASIHTTPRequest *)loader
{
    NSString *responseString = [loader responseString];
    NSDictionary * dict = [responseString KXjSONValueObject];
    NSDictionary * dic = dict[@"head"];
    NSLog(@"%@",dic);
    m_isLoading = NO;
    if (![[dic objectForKey:@"state"] intValue] == 0) {
        [Common TipDialog:[dic objectForKey:@"msg"]];
        return;
    }

    if ([loader.username isEqualToString:ADDGROUP_POST_URL]) {
        
        if(m_postBlock){
            m_postBlock(dict[@"body"][@"dto"]);
        }
        [self.navigationController dismissViewControllerAnimated:YES completion:nil];
        MBProgressHUD *progress_ = [[MBProgressHUD alloc] initWithFrame:CGRectMake(0, 0, kDeviceWidth, self.view.frame.size.height)];
        progress_.labelText = @"帖子创建成功";
        progress_.mode = MBProgressHUDModeText;
        progress_.userInteractionEnabled = NO;
        [[[UIApplication sharedApplication].windows lastObject] addSubview:progress_];
        [progress_ show:YES];
        [progress_ showAnimated:YES whileExecutingBlock:^{
            sleep(1);
        } completionBlock:^{
            [progress_ release];
            [progress_ removeFromSuperview];
        }];
        [[NSUserDefaults standardUserDefaults] removeObjectForKey:[NSString stringWithFormat:@"addPosting_%@",g_nowUserInfo.userid]];
        [[NSUserDefaults standardUserDefaults] synchronize];
    }
}

- (void)setPostingBlock:(PostingBlock)post
{
    m_postBlock = [post copy];
    
}

#pragma mark 切换动画

- (void)gestureRecognizerHandle:(UITapGestureRecognizer*)image
{
    NSLog(@"%ld",(long)image.view.tag);
    int index;
    // 1.封装图片数据
    NSMutableArray *photos = [[NSMutableArray alloc]init];
    index =  401;
    for (int i= 0;i<imageCount;i++)
    {
//        NSMutableDictionary *photo = [[NSMutableDictionary alloc] init];
        UIImageView *imgeView = (UIImageView*)[self.view viewWithTag:index+i];
//        [photo setObject:imgeView forKey:@"srcImageView"];
//        [photos addObject:photo];
//        [photo release];
        MJPhoto *photo = [[MJPhoto alloc] init];
//        photo.url = [NSURL URLWithString:imgURL]; // 图片路径
        photo.srcView = imgeView; // 来源于哪个UIImageView
        [photos addObject:photo];
        [photo release];
    }
    // 2.显示相册
    MJPhotoBrowser *browser = [[MJPhotoBrowser alloc] init];
    browser.delegate = self;
    browser.currentPhotoIndex = image.view.tag-401; // 弹出相册时显示的第一张图片是？
    browser.photos = photos; // 设置所有的图片
    [browser show];
    [browser release];
    [photos release];
}

- (void)photoBrowser:(MJPhotoBrowser *)photoBrowser didChangedToPageAtIndex:(NSUInteger)index;
{
}

- (void)didFinishFail:(ASIHTTPRequest*)loader
{
    [Common TipDialog:@"网络异常"];
}

- (NSArray*)saveImage
{
    UIImageView * imageView;
    NSMutableArray *array = [NSMutableArray array];
    long time;
    int arc = 0;
    for (int i = 401; i<401+imageCount; i++) {
        time = [CommonDate getLongTime];
        imageView = (UIImageView*)[self.view viewWithTag:i];
        NSData *data = UIImageJPEGRepresentation(imageView.image, Define_picScale);
        arc = arc4random()%1000;
        time = time +arc;
        NSString *strPath = [SDImageCache cachedFileNameForKey:[NSString stringWithFormat:@"%ld", time]];
        [array addObject:strPath];
        BOOL b= [data writeToFile:[NSString stringWithFormat:@"%@/%@", [Common getImagePath], strPath] atomically:YES];
        if (b) {
            NSLog(@"111111");
        }
    }
    return array;
    
}

- (void)getMyPhoto:(NSArray*)arrayTime
{
    UIImage * image;
    NSString* time = nil;
    for (int i = 0; i<arrayTime.count; i++) {
        time = [arrayTime objectAtIndex:i];
        image = [UIImage imageWithContentsOfFile:[[Common getImagePath] stringByAppendingFormat:@"/%@", time]];
        if (image) {
            imageCount++;
            [self setImageWithDate:image];
        }else{
            break;
        }
    }

}

- (void)removeMyPhoto
{
    
}
//- (void)requestFinished:(ASIHTTPRequest *)loader
@end
