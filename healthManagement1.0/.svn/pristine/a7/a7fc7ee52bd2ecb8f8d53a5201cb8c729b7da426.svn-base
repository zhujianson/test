//
//  RadarDoctorList.m
//  jiuhaohealth4.0
//
//  Created by xjs on 15/5/27.
//  Copyright (c) 2015年 xuGuohong. All rights reserved.
//

#import "RadarDoctorList.h"
#import "RadarDoctorCell.h"
#import "UIImageView+WebCache.h"

#define PAGENUMBER 20

@implementation RadarDoctorList
{
    UITableView * m_table;
//    IconOperationQueue *m_OperationQueue;
    NSMutableArray * dataArray;
    __block NSIndexPath * index;
}

- (void)dealloc
{
    [m_table release];
    [super dealloc];
}


- (void)viewDidLoad
{
    [super viewDidLoad];
    dataArray = [[NSMutableArray alloc]init];
    //                 initWithObjects:@{@"titlepath": @""},@{@"titlepath": @""}, nil];
    
//    m_OperationQueue = [[IconOperationQueue alloc] init];
//    [m_OperationQueue setM_arrayList:dataArray];
//    m_OperationQueue.delegate = self;
//    m_OperationQueue.imageKey = @"userPhoto";
//    m_OperationQueue.pathSuffix = @"?imageView2/1/w/120/h/120";
    
    [self beginLooding];
    [self creatTable];

}

- (void)creatTable
{
    if (m_table) {
        UILabel* lab = (UILabel*)[m_table.tableFooterView viewWithTag:tableFooterViewLabTag];
        if ([dataArray count] < PAGENUMBER*m_nowPage) {
            lab.text = NSLocalizedString(@"已到底部", nil);
            lab.textColor = [CommonImage colorWithHexString:@"666666"];
            lab.frame = CGRectMake(0, 0, kDeviceWidth, 45);
            UIActivityIndicatorView* activi = (UIActivityIndicatorView*)[m_table.tableFooterView viewWithTag:tableFooterViewActivityTag];
            [activi removeFromSuperview];
        } else {
            lab.text = NSLocalizedString(@"加载更多...", nil);
        }
        [m_table reloadData];
        return;
    }
    m_table = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, kDeviceWidth, kDeviceHeight-36) style:UITableViewStyleGrouped];
    m_table.delegate = self;
    m_table.dataSource = self;
    m_table.rowHeight = 290/2;
    m_table.backgroundColor = [UIColor clearColor];
    [Common setExtraCellLineHidden:m_table];
    if (IOS_7) {
        [m_table setSeparatorInset:UIEdgeInsetsMake(0, 0, 0, 0)];
    }
    //分割线颜色
    m_table.separatorColor = [CommonImage colorWithHexString:VERSION_LIN_COLOR_QIAN];
    //    myTable.backgroundColor = [UIColor clearColor];
    [self.view addSubview:m_table];
    //创建加载更多
    UIView* footerView = [Common createTableFooter];
    m_table.tableFooterView = footerView;
    UILabel* lab = (UILabel*)[m_table.tableFooterView viewWithTag:tableFooterViewLabTag];
    
    if ([dataArray count] < PAGENUMBER*m_nowPage) {
        lab.text = NSLocalizedString(@"已到底部", nil);
        lab.textColor = [CommonImage colorWithHexString:@"666666"];
        lab.frame = CGRectMake(0, 0, kDeviceWidth, 45);
        UIActivityIndicatorView* activi = (UIActivityIndicatorView*)[m_table.tableFooterView viewWithTag:tableFooterViewActivityTag];
        [activi removeFromSuperview];
        
    } else {
        lab.text = NSLocalizedString(@"加载更多...", nil);
    }
    
}

- (void)beginLooding
{
    NSMutableDictionary *dic = [NSMutableDictionary dictionary];
    [dic setObject:[NSNumber numberWithInt:_type] forKey:@"type"];
    [dic setObject:[NSString stringWithFormat:@"%d",m_nowPage] forKey:@"pageNo"];
    [dic setObject:[NSString stringWithFormat:@"%d",PAGENUMBER] forKey:@"pageSize"];
    [[CommonHttpRequest defaultInstance] sendNewPostRequest:FIND_FriendList values:dic requestKey:FIND_FriendList delegate:self controller:self actiViewFlag:1 title:nil];
    m_nowPage++;
    
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 1;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return [dataArray count];
}

- (UIView*)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    UIView * view = [[[UIView alloc]init]autorelease];
    view.backgroundColor = [UIColor clearColor];
    return view;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 0.1;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 10;
}

- (UITableViewCell*)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString * str = @"cell";
    RadarDoctorCell * cell = [tableView dequeueReusableCellWithIdentifier:str];
    if (!cell) {
        cell = [[[RadarDoctorCell alloc]initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:str]autorelease];
        //cell点击背景颜色
        //        cell.selectedBackgroundView = [Common creatCellBackView];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        [cell setRadarDoctorBlock:^(NSString *text) {
            NSIndexPath *m_indexPath = [tableView indexPathForCell:cell];
            if (text) {
                NSMutableDictionary * dic = dataArray[m_indexPath.section];
                [dic setObject:@"1" forKey:@"is_invitation"];
                [self inviteFriend:dic[@"accountId"] text:text];
            }else{
                index = m_indexPath;
            }
        }];
    }
    [cell setUserData:dataArray[indexPath.section]];
    NSString *imagePath = [dataArray[indexPath.section][@"userPhoto"] stringByAppendingString:@"?imageView2/1/w/120/h/120"];
    UIImage *define = [UIImage imageNamed:@"common.bundle/common/center_my-family_head_icon.png"];
    [cell.m_headerView sd_setImageWithURL:[NSURL URLWithString:imagePath] placeholderImage:define];
    
//    if ([imagePath length]) {
//        UIImage *image = [m_OperationQueue getImageForUrl:imagePath];
//        if (image) {
//            [cell setPickerImage:image];
//        }else {
//            if (tableView.dragging == NO && tableView.decelerating == NO)//table停止不再滑动的时候下载图片（先用默认的图片来代替Cell的image）
//            {
//                [m_OperationQueue startIconDownload:imagePath forIndexPath:indexPath setNo:0];
//            }
//            [cell setPickerImage:[UIImage imageNamed:@"common.bundle/common/center_my-family_head_icon.png"]];
//        }
//    }
//    else {
//        [cell setPickerImage:[UIImage imageNamed:@"common.bundle/common/center_my-family_head_icon.png"]];
//    }
    
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    //    MyCollectionTableViewCell *cell = (MyCollectionTableViewCell *)[tableView cellForRowAtIndexPath:indexPath];
}

//UIScrollView滚动停止
- (void)scrollViewDidEndDecelerating:(UIScrollView*)scrollView
{
    // 下拉到最底部时显示更多数据
    if (scrollView.contentOffset.y >= (scrollView.contentSize.height - scrollView.frame.size.height - 45)) {
        if ([dataArray count] < m_nowPage*PAGENUMBER) {
        } else {
            [self beginLooding];
        }
    }
//    NSArray *visiblePaths = [m_table indexPathsForVisibleRows];
//    [m_OperationQueue loadImagesForOnscreenRows:visiblePaths isRow:NO];
}

////UIScrollView松开手指
//- (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate
//{
//    if (!decelerate)//手指松开且不滚动
//    {
//        NSArray *visiblePaths = [m_table indexPathsForVisibleRows];
//        [m_OperationQueue loadImagesForOnscreenRows:visiblePaths isRow:NO];
//    }
//}

- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView
{
    RadarDoctorCell *cell = (RadarDoctorCell*)[m_table cellForRowAtIndexPath:index];
    [cell resign];
}

- (void)showImageForDownload:(NSDictionary *)imageDicInfo
{
    if (m_isClose) {
        return;
    }
    
    NSMutableDictionary *dicCansu = [[NSMutableDictionary alloc] initWithDictionary:imageDicInfo];
    [self performSelectorOnMainThread:@selector(setSellerTableCellImage:) withObject:dicCansu waitUntilDone:YES];
}

- (void)setSellerTableCellImage:(NSDictionary*)canshu
{
    UIImage *image = [canshu objectForKey:@"image"];
    NSIndexPath *indexPath = [canshu objectForKey:@"indexPath"];
    [canshu release];
    
    RadarDoctorCell *cell = (RadarDoctorCell*)[m_table cellForRowAtIndexPath:indexPath];
    //	[cell setIconImage:[UIImage imageWithData:image]];
    [cell setPickerImage:image];
}


- (void)didFinishFail:(ASIHTTPRequest *)loader
{
    
}

- (void)didFinishSuccess:(ASIHTTPRequest *)loader
{
    NSString *responseString = [loader responseString];
    NSDictionary *dic = [responseString KXjSONValueObject];
    if (![[dic[@"head"] objectForKey:@"state"] intValue])
    {
        if ([loader.username isEqualToString:FIND_FriendList]) {
            //获取详情
            NSArray *dit = [dic objectForKey:@"body"][@"accountInfos"];
            for (NSMutableDictionary * d in dit) {
                [d setObject:@"0" forKey:@"is_invitation"];
                [dataArray addObject:d];
            }
            [self creatTable];
            NSLog(@"%@",dataArray);
        }else if ([loader.username isEqualToString:ADD_FRIEND_URL]) {
            //获取详情
            NSLog(@"邀请成功");
            MBProgressHUD *progress_ = [[MBProgressHUD alloc] initWithFrame:CGRectMake(0, 0, kDeviceWidth, self.view.frame.size.height)];
            progress_.labelText = @"邀请成功";
            progress_.mode = MBProgressHUDModeText;
            progress_.userInteractionEnabled = NO;
            [[[UIApplication sharedApplication].windows lastObject] addSubview:progress_];
            [progress_ show:YES];
            [progress_ showAnimated:YES whileExecutingBlock:^{
                sleep(1);
            } completionBlock:^{
                [progress_ release];
                [progress_ removeFromSuperview];
            }];
            
        }
    }
    else {
        [Common TipDialog:[dic[@"head"] objectForKey:@"msg"]];
    }
}


//邀请好友
- (void)inviteFriend:(NSString*)friendId text:(NSString*)text
{
    if ([NSString isContainsEmoji:text])
    {
        [Common TipDialog:NSLocalizedString(@"暂不支持表情信息", nil)];
        return;
    }

    NSMutableDictionary *dic = [NSMutableDictionary dictionary];
    [dic setObject:friendId forKey:@"friendId"];
    [dic setObject:text forKey:@"remark"];
    [[CommonHttpRequest defaultInstance] sendNewPostRequest:ADD_FRIEND_URL values:dic requestKey:ADD_FRIEND_URL delegate:self controller:self actiViewFlag:1 title:nil];
}


/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect {
    // Drawing code
}
*/

@end
