//
//  MyPostViewController.m
//  jiuhaohealth4.0
//
//  Created by 徐国洪 on 15-6-1.
//  Copyright (c) 2015年 xuGuohong. All rights reserved.
//

#import "MyPostViewController.h"
#import "PostTableViewCell.H"
#import "CommunityDetailViewController.h"
#import "DiaryModelView.h"

@interface MyPostViewController () <UITableViewDataSource, UITableViewDelegate>
{
    __block  NSMutableArray *m_array;
    __block UITableView *m_talbleView;
     NSString *requestTime;
}

@end

@implementation MyPostViewController

- (void)dealloc
{
    [m_array release];
    [m_talbleView release];
    
    [super dealloc];
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    self.title = @"我的帖子";
    self.log_pageID = 419;
    
    g_nowUserInfo.myPostNotRead = 0;
    requestTime = [DiaryModelView getTimeWithKey:@"kLastPostTime"];//总是取上一次时间
    m_array = [[NSMutableArray alloc] init];
    
    m_talbleView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, kDeviceWidth, kDeviceHeight)];
    m_talbleView.delegate = self;
    m_talbleView.dataSource =self;
    m_talbleView.backgroundColor = [UIColor clearColor];
    UIView *footer = m_talbleView.tableFooterView = [Common createTableFooter];
    m_talbleView.tableFooterView = footer;
    m_talbleView.separatorColor = [CommonImage colorWithHexString:LINE_COLOR];
    [self.view addSubview:m_talbleView];
    [self getDataSource];
}

#pragma  mark -网络回调
/**
 *  获得数据
 */
- (void)getDataSource
{
    m_loadingMore = YES;
    NSString *postId = @"";
    if (m_nowPage != 1)
    {
       ConvertToPostModel *postModel = [m_array lastObject];
        postId = postModel.postId;
    }
    NSMutableDictionary *requestDic =  [NSMutableDictionary dictionary];
    [requestDic setObject:postId forKey:@"postId"];
    [requestDic setObject:requestTime forKey:@"time"];
    [requestDic setValue:[NSString stringWithFormat:@"%d", m_nowPage] forKey:@"pageNumber"];
    [requestDic setValue:[NSString stringWithFormat:@"%d",g_everyPageNum] forKey:@"pageSize"];
    [[CommonHttpRequest defaultInstance] sendNewPostRequest:kGetMyPost values:requestDic requestKey:kGetMyPost delegate:self controller:self actiViewFlag:0 title:nil];
    m_nowPage++;
    
}

- (void)didFinishFail:(ASIHTTPRequest *)loader
{
    
}

- (void)didFinishSuccess:(ASIHTTPRequest *)loader
{
    NSString *responseString = [loader responseString];
    NSDictionary *dic = [responseString KXjSONValueObject];
    
    NSDictionary *head = [dic objectForKey:@"head"];
    if ([head[@"state"] isEqualToString:@"0000"])
    {
        NSDictionary *bodyDic = dic[@"body"];
        NSArray *resultArray = bodyDic[@"list"];
        if ([loader.username isEqualToString:kGetMyPost]) {
            
            if (m_nowPage==2) {
                [m_array removeAllObjects];
                [DiaryModelView saveTimeWithKey:@"kLastPostTime" withTimeStr:bodyDic[@"date"]];
            }
            if(resultArray.count < g_everyPageNum){
                [self endOfResultList];
            }
            else
            {
                m_loadingMore = NO;
            }

            for(NSDictionary *dic in resultArray){
                ConvertToPostModel *model = [[ConvertToPostModel alloc] init];
                if (![dic.allKeys containsObject:@"postName"] )
                {
                    [dic setValue:@"" forKey:@"postName"];
                }
                if ([dic.allKeys containsObject:@"newPraiseCount"] )
                {
                    [dic setValue:dic[@"newPraiseCount"] forKey:@"praiseCount"];
                }
               [model parseWithDic:dic];
//                isread 0是正常 >0 为未读
                model.isRead = ![dic[@"isRead"] intValue]?@"1":@"0";
                [m_array addObject:model];
                [model release];
            }

            [m_talbleView reloadData];
        }
    } else {
        [Common TipDialog:head[@"msg"]];
        [self endOfResultList];
    }
}

#pragma mark - UITableViewDataSource And Delegate

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return m_array.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *identifier = @"postListCell";
    PostTableViewCell *postCell = [tableView dequeueReusableCellWithIdentifier:identifier];
    if(!postCell){
        postCell = [[[PostTableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifier] autorelease];
    }
    [postCell setModel:m_array[indexPath.row]];
    return postCell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    ConvertToPostModel *model = (ConvertToPostModel *)m_array[indexPath.row];
    return model.allHeight;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    ConvertToPostModel *postModel = m_array[indexPath.row];
    if (![postModel.isRead intValue])
    {
        postModel.isRead = @"1";
        PostTableViewCell *cell = (PostTableViewCell*)[m_talbleView cellForRowAtIndexPath:indexPath];
        [cell hiddenRedImage];
    }
    
    NSMutableDictionary *dict = [@{@"postId":postModel.postId} mutableCopy];
    CommunityDetailViewController * communityDetailVC = [[CommunityDetailViewController alloc] init];
    communityDetailVC.isfromSearchListFlag = NO;
    communityDetailVC.m_superDic = dict;
    
    communityDetailVC.myCommunityDetailViewControllerBlock = ^(NSString *str){
        if ([kDeletePost isEqualToString:str])
        {
            dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.2 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
                [m_array removeObjectAtIndex:indexPath.row];
                [m_talbleView deleteRowsAtIndexPaths:[NSArray arrayWithObject:indexPath] withRowAnimation:UITableViewRowAnimationFade];
                
            });
        }
    };
    [self.navigationController pushViewController:communityDetailVC animated:YES];
    [communityDetailVC release];
    [dict release];
}
//UIScrollView滚动停止
- (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView
{
    //上拉加载  拖动过程中
    if(m_loadingMore == NO)
    {
        // 下拉到最底部时显示更多数据
        if( !m_loadingMore && scrollView.contentOffset.y >= ( scrollView.contentSize.height - scrollView.frame.size.height - 45) )
        {
            [self getDataSource];
        }
    }
}
#pragma mark -set-getUi
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

//停止加载TableView
- (void)endOfResultList
{
    hasMoreFlag = NO;
    UILabel *lab = (UILabel*)[m_talbleView.tableFooterView viewWithTag:tableFooterViewLabTag];
    lab.text = @"已到底部";
    lab.frame = CGRectMake(0, 0, kDeviceWidth, 45);
    UIActivityIndicatorView *activi = (UIActivityIndicatorView*)[m_talbleView.tableFooterView viewWithTag:tableFooterViewActivityTag];
    [activi removeFromSuperview];
}

@end
