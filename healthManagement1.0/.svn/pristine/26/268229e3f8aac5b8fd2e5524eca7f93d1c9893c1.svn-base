//
//  BoxListTableView.m
//  healthManagement1.0
//
//  Created by xjs on 16/1/8.
//  Copyright © 2016年 xuGuohong. All rights reserved.
//

#import "BoxListTableView.h"
#import "SystemDetailViewController.h"
#import "AppDelegate.h"
#import "CommonHttpRequest.h"
#import "DBOperate.h"
#import "BookChallengeViewController.h"
#import "SelectedView.h"

@implementation BoxListTableView
{
    UITableView *boxListTableView;
    BOOL m_loadingMore;
    BOOL m_reloading;
    BOOL m_isGetDataForServer;
    
    NSString* _deleteURL;
    
    NSMutableArray *dataArray;

}
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        dataArray = [[NSMutableArray alloc] initWithCapacity:0];

    }
    return self;
}

- (void)viewDidLoad
{
    m_nowPage = 0;
    
    boxListTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, kDeviceWidth, kDeviceHeight)];
    boxListTableView.dataSource = self;
    boxListTableView.delegate = self;
    boxListTableView.separatorStyle = UITableViewCellSeparatorStyleSingleLine;
    boxListTableView.backgroundColor = [UIColor whiteColor];//[CommonImage colorWithHexString:@"#f6f7ed"];
    [self.view addSubview:boxListTableView];
    boxListTableView.separatorColor = [CommonImage colorWithHexString:VERSION_LIN_COLOR_QIAN];
    
    UIView *footerView = [Common createTableFooter];
    boxListTableView.tableFooterView = footerView;
    
    [self setExtraCellLineHidden:boxListTableView];
    [self getLocalData];

}

//删除出现时返回crash
- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    [boxListTableView setEditing:NO];
}

- (void)loadHrstoryMsg:(NSString*)time
{
    NSMutableDictionary *dic = [NSMutableDictionary dictionary];
    [dic setObject:time?time:@"0" forKey:@"acquisitionTime"];
    [dic setObject:[NSNumber numberWithInt:g_everyPageNum] forKey:@"pageSize"];
    NSString * url = URL_getBroadcastList;
    if (self.m_mail == HEALTH_REMIND) {
        url = URL_getHEALTHALERTList;
        [dic setObject:[NSNumber numberWithInt:self.m_mail] forKey:@"type"];
    }
    [[CommonHttpRequest defaultInstance] sendNewPostRequest:url values:dic requestKey:url delegate:self controller:self actiViewFlag:1 title:nil];
}

- (void)removeData
{
    [dataArray removeAllObjects];
    [boxListTableView reloadData];
}

- (void)getLocalData
{
    m_loadingMore = YES;
    
    NSMutableArray *array = [[DBOperate shareInstance] getMsgListData:m_nowPage type:self.m_mail];
    
    UILabel *lab = (UILabel*)[boxListTableView.tableFooterView viewWithTag:tableFooterViewLabTag];
    if ([array count] < g_everyPageNum) {
        
        lab.text = NSLocalizedString(@"已到底部",nil);
        lab.textColor = [CommonImage colorWithHexString:@"666666"];
        lab.frame = CGRectMake(0, 0, kDeviceWidth, 45);
        UIActivityIndicatorView *activi = (UIActivityIndicatorView*)[boxListTableView.tableFooterView viewWithTag:tableFooterViewActivityTag];
        [activi removeFromSuperview];
    }
    else {
        m_loadingMore = NO;
        lab.text = NSLocalizedString(@"加载更多...",nil);
    }
    
    [dataArray addObjectsFromArray:array];
    
    m_nowPage += array.count;
    
    [boxListTableView reloadData];
    
    if (!m_isGetDataForServer) {
        
        NSString *time = [[NSUserDefaults standardUserDefaults] objectForKey:[NSString stringWithFormat:@"%@boxLastRowTime", g_nowUserInfo.userid]];
        [self loadHrstoryMsg:time];
        m_isGetDataForServer = YES;
    }
}

#pragma mark delete
- (void)tableView:(UITableView*)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath*)indexPath
{
    [self deleteDataIndex:(int)indexPath.row];
    
    [dataArray removeObjectAtIndex:indexPath.row];
    // Delete the row from the data source.
    [tableView deleteRowsAtIndexPaths:[NSArray arrayWithObject:indexPath] withRowAnimation:UITableViewRowAnimationFade];
}

- (UITableViewCellEditingStyle)tableView:(UITableView*)tableView editingStyleForRowAtIndexPath:(NSIndexPath*)indexPath
{
    return UITableViewCellEditingStyleDelete;
}

- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath
{
    return YES;
}

- (NSString *)tableView:(UITableView *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return @"删除";
}

#pragma mark 删除数据的网络请求
- (void)deleteDataIndex:(int)indexRow
{
    NSDictionary *dictInfo = [dataArray objectAtIndex:indexRow];
    
    [[DBOperate shareInstance] DeleteMegToDBWithData:dictInfo type:self.m_mail];
}

/**
 *  隐藏tableviewd多余分割线
 *
 *  @param tableView
 */
- (void)setExtraCellLineHidden: (UITableView *)tableView
{
    UIView *view = [UIView new];
    view.backgroundColor = [UIColor clearColor];
    [tableView setTableFooterView:view];
    UIView *footView = [Common createTableFooter];
    [view addSubview:footView];
}

//停止加载TableView
- (void)endOfResultList
{
    UILabel *lab = (UILabel*)[boxListTableView.tableFooterView viewWithTag:tableFooterViewLabTag];
    lab.text = @"已到底部";
    lab.frame = CGRectMake(0, 0, kDeviceWidth, 45);
    UIActivityIndicatorView *activi = (UIActivityIndicatorView*)[boxListTableView.tableFooterView viewWithTag:tableFooterViewActivityTag];
    [activi removeFromSuperview];
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 65;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return dataArray.count;
}

- (UITableViewCell*)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"teamCell"];
    UIView *m_read_type = nil;
    
    if (cell == nil)
    {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:@"teamCell"];
        //自定义右箭头
        cell.accessoryView = [CommonImage creatRightArrowX:cell.frame.size.width-22 Y:(cell.frame.size.height-12)/2 cell:cell];
        cell.backgroundColor = [UIColor whiteColor];//[CommonImage colorWithHexString:@"#f6f7ed"];
        //cell点击背景颜色
        cell.selectedBackgroundView = [Common creatCellBackView];
        
        //已读未读
        m_read_type = [[UIView alloc] initWithFrame:CGRectMake(10, 15, 7,7)];
        m_read_type.backgroundColor = [CommonImage colorWithHexString:@"#e75441"];
        m_read_type.clipsToBounds = YES;
        m_read_type.hidden = NO;
        m_read_type.layer.cornerRadius = m_read_type.width/2;
        m_read_type.tag = 1230;
        [cell.contentView addSubview:m_read_type];
        
        //ttile
        UILabel * m_labTitle = [[UILabel alloc] initWithFrame:CGRectMake(m_read_type.right+7, 12, kDeviceWidth - 54, 18)];
        m_labTitle.backgroundColor = [UIColor clearColor];
        m_labTitle.tag = 1231;
        m_labTitle.textColor = [CommonImage colorWithHexString:@"333333"];
        m_labTitle.font = [UIFont systemFontOfSize:17];
        [cell.contentView  addSubview:m_labTitle];
        
        UILabel * m_labSubTitle = [[UILabel alloc] initWithFrame:CGRectMake(m_read_type.right+7, 40, m_labTitle.width, 16)];
        m_labSubTitle.backgroundColor = [UIColor clearColor];
        m_labSubTitle.tag = 1232;
        m_labSubTitle.textColor = [CommonImage colorWithHexString:@"666666"];
        m_labSubTitle.font = [UIFont systemFontOfSize:14];
        [cell.contentView  addSubview:m_labSubTitle];
    }
    
    NSDictionary *oneDic = dataArray[indexPath.row];
    UIView *readType = [cell.contentView viewWithTag:1230];
    UILabel *m_labSubTitle = (UILabel *)[cell.contentView viewWithTag:1232];
    UILabel *m_labTitle = (UILabel *)[cell.contentView viewWithTag:1231];
    
    readType.hidden = [[oneDic objectForKey:@"isRead"] boolValue];
    
    NSString *title = oneDic[@"title"];
    NSString *content = oneDic[@"content"];
    m_labTitle.text = title;
    m_labSubTitle.text = content;
    
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    NSMutableDictionary *oneDic = dataArray[indexPath.row];
    
//    if (![[oneDic objectForKey:@"isRead"] boolValue])
//    {
//        NSString *sql = [NSString stringWithFormat:@"UPDATE systemMsg SET isRead = '%d' WHERE createTime = '%@'", 1, oneDic[@"createTime"]];
//        
//        [[DBOperate shareInstance] insertLocalDataForSQL:sql];
//        
//        [oneDic setObject:@"1" forKey:@"isRead"];
//        [boxListTableView reloadData];
//    }
    
    CommonViewController *systemDetailVC;
    if ([[oneDic objectForKey:@"broadcastType"] intValue] == 2) {
        
        systemDetailVC = [[BookChallengeViewController alloc] init];
        
        ((BookChallengeViewController*)systemDetailVC).resultDic = oneDic;
    }
    else {
        systemDetailVC = [[SystemDetailViewController alloc] init];
        ((SystemDetailViewController*)systemDetailVC).contentDic = oneDic;
    }
    
    UIViewController * Vc = self.view.superview.viewController;
    systemDetailVC.title = @"健康提醒";
    if (self.m_mail == SYSTEM_MESSAGE) {
        systemDetailVC.title = @"系统消息";
    }
    
    [Vc.navigationController pushViewController:systemDetailVC animated:YES];
}

#pragma mark - EGORefreshTableHeaderDelegate

- (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate
{
    if (m_loadingMore == NO &&  scrollView.contentSize.height - scrollView.contentOffset.y - scrollView.frame.size.height <= -40)
    {
        [self getLocalData];
    }
}

- (void)didFinishSuccess:(ASIHTTPRequest *)loader
{
    NSString *responseString = [loader responseString];
    NSDictionary *dic = [responseString KXjSONValueObject];
    
    NSDictionary *head = [dic objectForKey:@"head"];
    
    if (![[head objectForKey:@"state"] intValue])
    {
        NSDictionary *body = [dic objectForKey:@"body"];
//        NSArray *resultArray = body[@"list"];
        NSArray *resultArray = @[@{@"broadcastId":@"1",@"broadcastType":@"1",@"title":@"12323",@"content":@"1zcdasdasdasd",@"createUserName":@"qweqweqweqwe",@"createTime":@"234234223423"}];
        
        if ([loader.username isEqualToString:URL_getBroadcastList]) {
            if ([resultArray count]) {
                [[NSUserDefaults standardUserDefaults] setObject:[NSString stringWithFormat:@"%@", resultArray[0][@"createTime"]] forKey:[NSString stringWithFormat:@"%@boxLastRowTime", g_nowUserInfo.userid]];
                
                for (NSMutableDictionary *dic in resultArray)
                {
                    [[DBOperate shareInstance] insertMegToDBWithData:dic type:self.m_mail];
                }
                m_nowPage += resultArray.count;
                
                [dataArray insertObjects:resultArray atIndexes:[NSIndexSet indexSetWithIndexesInRange: NSMakeRange(0,[resultArray count])]];
                
                [boxListTableView reloadData];
            }
        }else if ([loader.username isEqualToString:URL_getHEALTHALERTList]) {
            if ([resultArray count]) {
                [[NSUserDefaults standardUserDefaults] setObject:[NSString stringWithFormat:@"%@", resultArray[0][@"createTime"]] forKey:[NSString stringWithFormat:@"%@boxLastRowTime", g_nowUserInfo.userid]];
                
                for (NSMutableDictionary *dic in resultArray)
                {
                    [[DBOperate shareInstance] insertMegToDBWithData:dic type:self.m_mail];
                }
                m_nowPage += resultArray.count;
                
                [dataArray insertObjects:resultArray atIndexes:[NSIndexSet indexSetWithIndexesInRange: NSMakeRange(0,[resultArray count])]];
                
                [boxListTableView reloadData];
            }
        }
    }
    else {
        [Common TipDialog:[head objectForKey:@"msg"]];
    }
}

- (void)didFinishFail:(ASIHTTPRequest *)loader
{
    NSLog(@"fail");
}


@end
