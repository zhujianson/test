//
//  HMHomeViewController.m
//  healthManagement1.0
//
//  Created by jiuhao-yangshuo on 15/10/19.
//  Copyright © 2015年 xuGuohong. All rights reserved.
//

#import "HMHomeViewController.h"
#import "AppDelegate.h"
#import "UIImageView+WebCache.h"
#import "SettingViewController.h"
#import "BoxListViewController.h"
#import "DiaryModelView.h"
#import "DoctorListViewController.h"
#import "SteperHomeViewController.h"
#import "HealthNewsListViewController.h"
#import "ToolsViewController.h"
#import "AccountInformationViewController.h"
#import "DBOperate.h"
#import "WebViewController.h"
#import "ShowConsultViewController.h"
#import "MsgDBOperate.h"
#import "EScrollerView.h"
#import "NoticeDetailViewController.h"

static CGFloat kImageHeight  = 200;
static NSString *const kReportTime  = @"kReportTimet";
static NSString *const kNewsTime  = @"kNewsTime";


@interface HMHomeViewController ()<EScrollerViewDelegate>
{
    UIScrollView *m_scrollView;
    UIImageView *m_navRedImage;
    UILabel *m_indexFirLabel;
    UILabel *m_indicateLabel;
    EScrollerView *m_advScroller;
    NSMutableDictionary *m_lastMsgDic;/*聊天消息   徐国洪*/
}
@end

@implementation HMHomeViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self)
    {
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(reciveMesg:) name:@"reciveMesg" object:nil];
        // Custom initialization
        [self createNav];
    }
    return self;
}

//start
- (void)reciveMesg:(NSNotification*)aNotification
{
    NSDictionary *dicc = [aNotification.object objectForKey:@"extras"];
    if (m_lastMsgDic) {
        if (([dicc[@"createTime"] longLongValue] - [m_lastMsgDic[@"createTime"] longLongValue]) >= 3000) {
            if ([dicc[@"content"] isEqualToString:m_lastMsgDic[@"content"]]) {
                return;
            }
        }
        m_lastMsgDic = nil;
    }
    
    m_lastMsgDic = [[NSMutableDictionary alloc] initWithDictionary:dicc];
    
    if (!g_nowUserInfo) {
        return;
    }
    
    [m_lastMsgDic setObject:@"1" forKey:@"forSelf"];
    NSString *fromId = [NSString stringWithFormat:@"%@", [m_lastMsgDic objectForKey:@"fromId"]];
    [m_lastMsgDic setObject:fromId forKey:@"friendId"];
    [m_lastMsgDic setObject:fromId forKey:@"toId"];
    [m_lastMsgDic setObject:@"0" forKey:@"isSendOK"];
    [m_lastMsgDic setObject:@"1" forKey:@"isInsertDB"];
    
    id vc = ((CommonNavViewController*)self.navigationController).nowViewController;
    int is = 0;
    ShowConsultViewController *m_showView = nil;
    
    NSString *ff;
    if ([vc isKindOfClass:[ShowConsultViewController class]]) {
        m_showView = vc;
        ff = [NSString stringWithFormat:@"%@", m_showView.friendModel.accountId];
        if ([ff isEqualToString:fromId]) {
            is = 1;
        }
    }
    else if ([vc isKindOfClass:[DoctorListViewController class]]) {
        is = 2;
    }
    
    [[DBOperate shareInstance] insertChatRecordToDBWithData:m_lastMsgDic];
    
    if (is == 1) {
        [m_showView addMessage:m_lastMsgDic isLishi:NO];
    } else {
        
        if (is == 2) {
            NSString *onlyId = [NSString stringWithFormat:@"%@_%@", g_nowUserInfo.userid, fromId];
            
            NSString *sql = [NSString stringWithFormat:@"UPDATE friendList SET createTime = '%@', content = '%@', contentType = '%@' WHERE onlyId = '%@'", m_lastMsgDic[@"createTime"], m_lastMsgDic[@"content"], m_lastMsgDic[@"contentType"], onlyId];
            
            [[MsgDBOperate shareInstance] updateFriendInfoRow:sql];
        }
        
        //未读红点
        if ([m_lastMsgDic[@"accountType"] intValue] == 2) { //1 患者 2 医师
            g_nowUserInfo.doctorMsgCount += 1;
            [[NSNotificationCenter defaultCenter] postNotificationName:@"refleshTip" object:nil];
        }
        else {
            g_nowUserInfo.friendMsgCount += 1;
            [[NSNotificationCenter defaultCenter] postNotificationName:@"refleshFriendListTip" object:nil];
        }
        
//        m_lastNewShowVC = 1;
        NSString *msg = nil;
        switch ([[m_lastMsgDic objectForKey:@"contentType"] intValue]) {
            case 0:
                msg = [m_lastMsgDic objectForKey:@"content"];
                break;
            case 1:
                msg = @"您收到一张图片";
                break;
            case 2:
                msg = @"您收到一条语音消息";
                break;
            case 3:
                msg = @"您收到一个图片表情";
                break;
            default:
                msg = @"您收到一条新的消息";
                break;
        }
        SystemSoundID soundID = 0;
        NSString *mainBundlPath = [[NSBundle mainBundle] bundlePath];
        NSString *filePath =[mainBundlPath stringByAppendingPathComponent:@"common.bundle/mp3/newdatatoast.wav"];
        
        NSURL* fileURL =  [NSURL fileURLWithPath:filePath];
        
        if (fileURL != nil) {
            SystemSoundID theSoundID;
            OSStatus error = AudioServicesCreateSystemSoundID((__bridge CFURLRef)fileURL, &theSoundID);
            if (error == kAudioServicesNoError) {
                soundID = theSoundID;
            } else {
                NSLog(@"Failed to create sound ");
            }
        }
        AudioServicesPlaySystemSound(soundID);
        AudioServicesPlaySystemSound(kSystemSoundID_Vibrate);
        
        m_lastMsgDic = nil;
    }
}


- (void)viewDidLoad
{
    [super viewDidLoad];
    
    kImageHeight =  (kImageHeight /375.0)*kDeviceWidth;
    [self createScrollView];
    [self createContentView];
    
    if ([g_nowUserInfo.userToken length])
    {
        [self getMyInfo];
        [self getMsg];
        [self getMyInformation];
    }
    
}

-(void)createScrollView
{
    m_scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 0, kDeviceWidth, kDeviceHeight)];
    m_scrollView.backgroundColor = [UIColor whiteColor];
    m_scrollView.showsVerticalScrollIndicator = NO;
    [self.view addSubview:m_scrollView];
    
    UIImageView *backImage = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, kDeviceWidth, kImageHeight)];
    backImage.tag = 1088;
    backImage.image = [UIImage imageNamed:@"common.bundle/common/conversation_logo.png"];
    [m_scrollView addSubview:backImage];

}

//创建广告滚动条
//创建广告滚动条
- (void)createAdvertising:(NSMutableArray*)array
{
    if (m_advScroller) {
        [m_advScroller setCreatBackViewStr:array];
    }else{
        m_advScroller = [[EScrollerView alloc] initWithFrameRect:CGRectMake(0, 0, kDeviceWidth, kImageHeight) ImageArray:array isAutoPlay:NO setImageKey:@"img_url"];
        m_advScroller.delegate = self;
        m_advScroller.showPageControl = NO;
        [m_scrollView addSubview:m_advScroller];
        
         UIView *backView = [m_scrollView viewWithTag:1088];
        [backView removeFromSuperview];
    }
    if (array.count > 1)
    {
        UIView *indicateView = [m_scrollView viewWithTag:1055];
        if (!indicateView)
        {
            indicateView = [[UIView alloc] initWithFrame:CGRectMake(0, m_advScroller.bottom, kDeviceWidth, 5)];
            indicateView.backgroundColor = [CommonImage colorWithHexString:VERSION_BACKGROUD_COLOR2];
            indicateView.tag = 1055;
            [m_scrollView addSubview:indicateView];
            
            m_indicateLabel = [Common createLabel:CGRectMake(0, 0, kDeviceWidth/array.count, indicateView.height) TextColor:nil Font:nil textAlignment:NSTextAlignmentLeft labTitle:@""];
            [indicateView addSubview:m_indicateLabel];
            m_indicateLabel.backgroundColor = [CommonImage colorWithHexString:VERSION_ERROR_TEXT_COLOR];
        }
    }
}

-(void)changeViewDataWith:(int)page
{
    [UIView animateWithDuration:0.2 animations:^{
        m_indicateLabel.frameX = (kDeviceWidth/m_advScroller.pageNum)*page;
    }];
}

-(void)createContentView
{
    float viewHight = kImageHeight;
    viewHight += 5 +15;
    //头像
    NSArray *leftArray = @[@"健康报告"];
    NSArray *imageArray = @[@"homeHealthRep"];
    for (int i = 0; i<leftArray.count; i++)
    {
        [self createContentCellViewWithPointY:viewHight andWithLeftTitle:leftArray[i] andContentTitle:leftArray[i] andBtnTag:i wiImage:imageArray[i]];
        viewHight += 50;
    }
    viewHight += 15;
    
    NSArray *titleArr = @[@"爱运动",@"问医生",@"健康资讯",@"健康工具"];
    NSArray *titleColorArr = @[@"7addb2",@"6fddea",@"cbacf2",@"87b4eb"];
    NSArray *titleColorHigArr = @[@"62b18e",@"59b1bb",@"a28ac2",@"6c90bc"];
    NSArray *imageArr = @[@"homeSports",@"homeTools",@"homesInfo",@"homeDoc"] ;
    UIButton * backViewBtn = nil;
    
    CGFloat viewW = (kDeviceWidth - 30 -10)/2.0;
    CGFloat viewH = 140*kDeviceWidth/375.0;
    
    CGFloat viewSapce = 10;
    UIImage * image;
    float indexW = 0;
    float indexH = 0;
    for (int i = 0; i<titleArr.count; i++)
    {
        indexH = i/2;//row
        indexW = i%2;
        
        image = [UIImage imageNamed:[NSString stringWithFormat:@"common.bundle/home/%@.png",imageArr[i]]];
        backViewBtn = [self createItemButton];
        backViewBtn.tag = 100+i;
        backViewBtn.frame = CGRectMake(15 +indexW *(viewW +viewSapce),viewHight + indexH*(viewH +viewSapce),viewW, viewH);
        [m_scrollView addSubview:backViewBtn];
        [backViewBtn setImage:image forState:UIControlStateNormal];
        UIImage* backImage = [CommonImage createImageWithColor:[CommonImage colorWithHexString:titleColorArr[i]]];
        UIImage* backImageHight = [CommonImage createImageWithColor:[CommonImage colorWithHexString:titleColorHigArr[i]]];
        [backViewBtn setBackgroundImage:backImage forState:UIControlStateNormal];
        [backViewBtn setBackgroundImage:backImageHight forState:UIControlStateHighlighted];
        [backViewBtn setTitle:titleArr[i] forState:UIControlStateNormal];
        
        NSString * titleBtn = titleArr[i];
//        CGSize size = image.size;
        [backViewBtn setTitleEdgeInsets:UIEdgeInsetsMake(22,-28, -22, 28)];
        [backViewBtn setImageEdgeInsets:UIEdgeInsetsMake(-15, 0, 15, -[titleBtn sizeWithFont:backViewBtn.titleLabel.font].width)];
    }
    viewHight = backViewBtn.bottom + 20;
    m_scrollView.contentSize = CGSizeMake(kDeviceWidth, viewHight);
    
}

-(void)createContentCellViewWithPointY:(int)pointY andWithLeftTitle:(NSString *)leftTitle andContentTitle:(NSString *)contentString andBtnTag:(int)i wiImage:(NSString *) image
{
    float kContentHight = 50;
    UIButton *backButton = [UIButton buttonWithType:UIButtonTypeCustom];
    backButton.tag = i +1000;
    backButton.frame = CGRectMake(15, pointY, kDeviceWidth-30, kContentHight);
    UIImage* backImageHight = [CommonImage createImageWithColor:[CommonImage colorWithHexString:@"e2f2ff" alpha:0.6]];
    UIImage* backImage = [CommonImage createImageWithColor:[CommonImage colorWithHexString:@"e2f2ff"]];
    [backButton setBackgroundImage:backImage forState:UIControlStateNormal];
    [backButton setBackgroundImage:backImageHight forState:UIControlStateHighlighted];
    backButton.layer.cornerRadius = 4.0;
    backButton.layer.masksToBounds = YES;
    backButton.clipsToBounds = YES;
    [backButton addTarget:self action:@selector(backBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    [m_scrollView addSubview:backButton];
    
    float imgeVieH = 35;
    UIImageView *imageView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@""]];
    imageView.frame = CGRectMake(10, (backButton.height-imgeVieH)/2.0, imgeVieH, imgeVieH);
    [backButton addSubview:imageView];
    imageView.image = [UIImage imageNamed:[NSString stringWithFormat:@"common.bundle/home/%@.png",image]];;
    
    UILabel *leftLabel = [Common createLabel:CGRectMake(imageView.right +10, 0, 70, backButton.height) TextColor:COLOR_666666 Font:[UIFont systemFontOfSize:M_FRONT_SEVENTEEN] textAlignment:NSTextAlignmentLeft labTitle:@""];
    leftLabel.text = leftTitle;
    [backButton addSubview:leftLabel];
    
    UIImageView *imgeView = [[UIImageView alloc]initWithFrame:CGRectMake(backButton.width-7-10, (backButton.height-13)/2, 13/2, 21/2)];
    imgeView.image = [UIImage imageNamed:@"common.bundle/common/right-arrow_pre.png"];
    [backButton addSubview:imgeView];
    
    UILabel *rightLabel = [Common createLabel:CGRectMake(leftLabel.right ,0, imgeView.left- leftLabel.right -10, leftLabel.height) TextColor:VERSION_LIN_COLOR_SHEN Font:[UIFont systemFontOfSize:M_FRONT_SEVENTEEN] textAlignment:NSTextAlignmentRight labTitle:@""];
    rightLabel.text = contentString;
    [backButton addSubview:rightLabel];
    switch (i)
    {
        case 0:
            m_indexFirLabel = rightLabel;
            break;
        default:
            break;
    }
}

- (UIButton *)createItemButton
{
    UIButton *backViewBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    [backViewBtn.titleLabel setBackgroundColor:[UIColor clearColor]];
    [backViewBtn addTarget:self action:@selector(setJumpEvents:) forControlEvents:UIControlEventTouchUpInside];
    backViewBtn.layer.cornerRadius = 4.0;
    backViewBtn.clipsToBounds = YES;
    backViewBtn.layer.masksToBounds = YES;
    return backViewBtn;
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
//    self.navigationController.navigationBarHidden = NO;
//    [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent];
    
    [self refleshTip];
    [self setUserInfo];
    [self refreshNoReadRedImage];
}

- (void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
    if (m_advScroller) {
        [m_advScroller startPlayAdv];
    }
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    if (m_advScroller) {
        [m_advScroller pausePlayAdv];
    }
    
}

- (void)refleshTip
{
//    m_navRedImage.hidden = NO;
}

- (void)setUserInfo
{
//    m_indexFirLabel.text = g_nowUserInfo.reportTitle;
    m_indexFirLabel.text = [NSString stringWithFormat:@"健康风险: %@",g_nowUserInfo.score];
}

#pragma mark - Event response
//广告点击回调
- (void)touchAdvertising:(NSMutableDictionary*)dic
{
    NSDictionary *dicItem = dic;
    
    if ([dicItem[@"islink"] boolValue]) {
        
        //跳转到活动页面
        NoticeDetailViewController *noticeDetailVC = [[NoticeDetailViewController alloc] init];
        
        noticeDetailVC.m_isHideNavBar = [dicItem[@"transparentYn"] isEqualToString:@"Y"];
        
        //        NSString *requestURL = [NSString stringWithFormat:@"%@operation/activity/%@.html?id=%@",NOTICE_DETAIL_URL, [dicItem objectForKey:@"detailID"], g_nowUserInfo.userid];
        NSString *requestURL = dic[@"click_url"];
        NSMutableDictionary *dicc = [NSMutableDictionary dictionary];
        [dicc setObject:requestURL forKey:@"url"];
        noticeDetailVC.m_url = requestURL;
        [dicc setObject:@"1" forKey:@"isShare"];
        [noticeDetailVC setM_dicInfo:dicc];
        noticeDetailVC.shareURL = requestURL;
        noticeDetailVC.titleName = dicItem[@"title"];
        noticeDetailVC.subTitle = dicItem[@"subtitle"];
        noticeDetailVC.newsId = dicItem[@"detailID"];
        [self.navigationController pushViewController:noticeDetailVC animated:YES];
    }
}
//刷新红点显示
-(void)refreshNoReadRedImage
{
    int count = [[DBOperate shareInstance] getNoReadCount];
    m_navRedImage.hidden = !MAX(count + g_nowUserInfo.broadcastNotReadNum, 0);
}

- (void)butEventHeader
{
    AccountInformationViewController * scanning = [[AccountInformationViewController alloc]init];
    [self.navigationController pushViewController:scanning animated:YES];
}

-(void)butEventShowEmail
{
    BoxListViewController *email = [[BoxListViewController alloc] init];
    [self.navigationController pushViewController:email animated:YES];
}

- (void)butEventshowSet
{
    SettingViewController * seting = [[SettingViewController alloc]init];
    seting.log_pageID = 103;
    [self.navigationController pushViewController:seting animated:YES];
}

-(void)setJumpEvents:(UIButton *)btn
{
    switch (btn.tag) {
        case 100:
        {
            SteperHomeViewController *stepVC = [[SteperHomeViewController alloc] init];
            [self.navigationController pushViewController:stepVC animated:YES];
        }
            break;
        case 101:
        {
            ToolsViewController *toolVC = [[ToolsViewController alloc] init];
            [self.navigationController pushViewController:toolVC animated:YES];
        }
            break;
        case 102:
        {
            UIStoryboard *healthNewsSB = [UIStoryboard storyboardWithName:@"HealthNews" bundle:nil];
            HealthNewsListViewController *helthNewsVC = [healthNewsSB instantiateViewControllerWithIdentifier:@"HealthNewsList"];
            [self.navigationController pushViewController:helthNewsVC animated:YES];
        }
        case 103:
        {
            DoctorListViewController *doctorList = [[DoctorListViewController alloc] init];
            [self.navigationController pushViewController:doctorList animated:YES];
        }
            break;
        default:
            break;
    }
}

-(void)backBtnClick:(UIButton *)btn
{
    switch (btn.tag) {
        case 1000:
        {
            WebViewController *help = [[WebViewController alloc] init];
            help.m_url = g_nowUserInfo.reportUrl;
            help.title = @"健康报告";
            [self.navigationController pushViewController:help animated:YES];
            [DiaryModelView saveTimeWithKey:kReportTime withTimeStr:nil];
        }
            break;
        case 1001:
        {
        }
            break;
        default:
            break;
    }
}


#pragma mark - Set-getUi
- (void)createNav
{
    UIBarButtonItem *leftBtn = [[UIBarButtonItem alloc] initWithTitle:@"  我的" style:UIBarButtonItemStylePlain target:self action:@selector(butEventHeader)];
    self.navigationItem.leftBarButtonItem = leftBtn;
    
    UIButton *butMail = [UIButton buttonWithType:UIButtonTypeCustom];
    [butMail setTitleColor:[CommonImage colorWithHexString:@"ffffff"] forState:UIControlStateNormal];
    [butMail setTitleColor:[CommonImage colorWithHexString:@"ffffff" alpha:0.4] forState:UIControlStateHighlighted];
    [butMail setTitle:@"信箱" forState:UIControlStateNormal];
    [butMail addTarget:self action:@selector(butEventShowEmail) forControlEvents:UIControlEventTouchUpInside];
    butMail.titleLabel.font = [UIFont systemFontOfSize:17];
    butMail.frame = CGRectMake(20, 0, 44, 44);
    
    UIBarButtonItem* right = [[UIBarButtonItem alloc] initWithCustomView:butMail];
    self.navigationItem.rightBarButtonItem = right;
    
    m_navRedImage = [[UIImageView alloc]initWithFrame:CGRectMake(butMail.width-4, 11, 8, 8)];
    m_navRedImage.backgroundColor = [CommonImage colorWithHexString:VERSION_ERROR_TEXT_COLOR];
    m_navRedImage.clipsToBounds = YES;
    m_navRedImage.layer.cornerRadius = 4;
    m_navRedImage.hidden = YES;
    m_navRedImage.backgroundColor = [UIColor redColor];
    [butMail addSubview:m_navRedImage];
    
    UIImageView *imageV = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 120, 44)];
    imageV.contentMode = UIViewContentModeCenter;
    imageV.image = [UIImage imageNamed:@"common.bundle/home/homeLogo.png"];
    self.navigationItem.titleView = imageV;
}

-(UIButton *)createNavButton
{
    UIButton * btn = [UIButton buttonWithType:UIButtonTypeCustom];
    [btn setTitleColor:[CommonImage colorWithHexString:@"ffffff"] forState:UIControlStateNormal];
    [btn.titleLabel setFont:[UIFont systemFontOfSize:M_FRONT_SEVENTEEN]];
     btn.frame = CGRectMake(0, IOS_7?20:0, 44, 44);
    [btn setTitleColor:[CommonImage colorWithHexString:@"ffffff" alpha:0.4] forState:UIControlStateHighlighted];
    [btn addTarget:self action:@selector(butEventNav:) forControlEvents:UIControlEventTouchUpInside];
    btn.titleLabel.font = [UIFont systemFontOfSize:17];
    [self.view addSubview:btn];
    return btn;
}

//获取未读消息
- (void)getMsg
{
    NSString *time = [[NSUserDefaults standardUserDefaults] objectForKey:[NSString stringWithFormat:@"%@boxLastRowTime", g_nowUserInfo.userid]];
    NSMutableDictionary *dic = [NSMutableDictionary dictionary];
    [dic setObject:time?time:@"-1" forKey:@"time"];
    [dic setObject:[DiaryModelView getTimeWithKey:@"kLastPostTime"] forKey:@"postTime"];
    [dic setObject:[DiaryModelView getTimeWithKey:@"kLastTime"]  forKey:@"replyTime"];
    [[CommonHttpRequest defaultInstance] sendNewPostRequest:GET_MSG_NOT_READ_COUNT values:dic requestKey:GET_MSG_NOT_READ_COUNT delegate:self controller:self actiViewFlag:0 title:NSLocalizedString(@"加载中...", nil)];
}

- (void)getMyInfo
{
    [g_nowUserInfo setMyBasicInformation:[[NSUserDefaults standardUserDefaults] objectForKey:@"user_Info"]];
    [self removeAdvView];
    [self setUserInfo];
    
    [APP_DELEGATE2 setUserID:g_nowUserInfo.userid];
    NSString *reportTime = [DiaryModelView getTimeWithKey:kReportTime];//总是取上一次时间
    NSString *newsTime = [DiaryModelView getTimeWithKey:kNewsTime];//总是取上一次时间
    NSMutableDictionary* dic = [NSMutableDictionary dictionary];
    [dic setObject:reportTime forKey:@"reportTime"];
    [dic setObject:newsTime forKey:@"newsTime"];
    [[CommonHttpRequest defaultInstance] sendNewPostRequest:GET_API_USERIFNO_URL values:dic requestKey:GET_API_USERIFNO_URL delegate:self controller:self actiViewFlag:0 title:NSLocalizedString(@"", nil)];
    
}

- (void)didFinishSuccess:(ASIHTTPRequest*)loader
{
    NSString* responseString = [loader responseString];
    NSDictionary* dic = [responseString KXjSONValueObject];
    
    NSDictionary *head = dic[@"head"];
    if (![head[@"state"] intValue]) {
        NSDictionary *body = dic[@"body"];
        if (!body.count)
        {
            return;
        }
        if ([loader.username isEqualToString:GET_API_USERIFNO_URL])
        {
            [g_nowUserInfo setMyInfo:body];
            [self removeAdvView];
            [self setUserInfo];
            [APP_DELEGATE2 setUserID:g_nowUserInfo.userid];
            //公告栏
            NSArray *announcementlist = [body objectForKey:@"list"];
            if (announcementlist.count) {
                
                NSMutableDictionary *dicItem;
                NSMutableArray *array = [NSMutableArray array];
                for (NSDictionary *item in announcementlist) {
                    
                    NSString *detailID = item[@"id"];
                    NSString *img_url = [Common isNULLString3:item[@"img"]];
                    NSString *click_url = [Common isNULLString3:item[@"url"]];
                    dicItem = [NSMutableDictionary dictionaryWithDictionary:
                               @{@"typestr":@"公告栏",
                                 @"title":[Common isNULLString3: item[@"title"]],
                                 @"img_url":img_url,
                                 @"click_url":click_url,
                                 @"islink": [Common isNULLString3:item[@"islink"]],
                                 @"detailID":detailID,
                                 @"subtitle":[Common isNULLString3:item[@"content"]]}];
                    
                    [array addObject:dicItem];
                }
                [self createAdvertising:array];
            }
        
        }else if ([loader.username isEqualToString:LOGIN_API_URL])
        {
            g_nowUserInfo = [Common initWithUserInfoDict:body];
            [self getMyInfo];
            [self getMyInformation];
        }
        else if ([loader.username isEqualToString:GET_MSG_NOT_READ_COUNT])
        {
            NSDictionary * body = dic[@"body"];
            g_nowUserInfo.broadcastNotReadNum = [[body objectForKey:@"unread_msg"] intValue]; //信箱未读数
            g_nowUserInfo.myMessageNoReadNum = [[body objectForKey:@"unread_comment"] intValue]; //评论未读数
            g_nowUserInfo.totalunreadMsgCount = [[body objectForKey:@"unread_friend"] intValue]; //总未读数
            g_nowUserInfo.doctorMsgCount = [[body objectForKey:@"unread_doctor"] intValue]; //医生未读数
            g_nowUserInfo.friendMsgCount = [[body objectForKey:@"friendMsgCount"] intValue]; //糖友未读数
            g_nowUserInfo.myPostNotRead = [[body objectForKey:@"my_post_not_read"] intValue]; //我的帖子未读总数量
            g_nowUserInfo.myThreadNotRead = [[body objectForKey:@"my_thread_not_read"] intValue]; //我的跟帖未读总数量
            g_nowUserInfo.integral = [body[@"points_available"] intValue];
            [self refreshNoReadRedImage];
        }else if ([loader.username isEqualToString:GETMYINFO_API_URL])
        {
            [g_nowUserInfo setMyBasicInformation:[dic objectForKey:@"body"][@"user_info"]];
        }
    }
    else
    {
        [Common TipDialog2:dic[@"msg"]];
    }
}

- (void)didFinishFail:(ASIHTTPRequest *)loader
{
    if ([loader.username isEqualToString:GETMYINFO_API_URL])
    {
        [g_nowUserInfo setMyBasicInformation:[[NSUserDefaults standardUserDefaults] objectForKey:@"user_Info"]];
        [self removeAdvView];
        [self setUserInfo];
        [APP_DELEGATE2 setUserID:g_nowUserInfo.userid];
    }
}

#pragma mark - PrivateMethod
- (void)removeAdvView
{
    [[UIApplication sharedApplication] setStatusBarHidden:NO withAnimation:NO];
    
    AppDelegate* myDelegate = [Common getAppDelegate];
    UIImageView *imageV = (UIImageView*)[myDelegate.window viewWithTag:99];
    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^(void) {
        dispatch_async( dispatch_get_main_queue(), ^(void){
            
            [UIView animateWithDuration:0.2 animations:^{
                imageV.alpha = 0;
            } completion:^(BOOL finished) {
                [imageV removeFromSuperview];
            }];
        });
    });
}

- (void)getMyInformation
{
    //获取个人信息
    NSMutableDictionary* dic1 = [NSMutableDictionary dictionary];
    [[CommonHttpRequest defaultInstance] sendNewPostRequest:GETMYINFO_API_URL values:dic1 requestKey:GETMYINFO_API_URL delegate:self controller:self actiViewFlag:1 title:NSLocalizedString(@"登录中...", nil)];
}
@end
