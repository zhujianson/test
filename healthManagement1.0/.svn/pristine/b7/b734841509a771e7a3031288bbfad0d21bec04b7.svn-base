//
//  PostListViewController.m
//  jiuhaohealth4.0
//
//  Created by 王敏 on 15-4-16.
//  Copyright (c) 2015年 xuGuohong. All rights reserved.
//

#import "PostListViewController.h"
#import "PostTableViewCell.h"
#import "EGORefreshTableHeaderView.h"
#import "ConvertToPostModel.h"
#import "CommunityDetailViewController.h"
#import "AppDelegate.h"
#import "TopicDetailsViewController.h"
#import "SteperHomeViewController.h"

@interface PostListViewController ()
<UITableViewDataSource,UITableViewDelegate,EGORefreshTableHeaderDelegate>
{
    __block UITableView *postTableView;
    EGORefreshTableHeaderView *_headView;
    CGFloat sizeHeight;
    BOOL lockFlag;
    UIView *headView;

}

@property (nonatomic,retain) NSMutableArray *dataArray;
@property (nonatomic,retain) NSString *lastPostId;//最后一条数据id

@end

@implementation PostListViewController
@synthesize postTableView;


- (void)dealloc
{
    self.tableViewScrollViewBlock = nil;
    self.dataArray = nil;
    self.lastPostId = nil;
    self.keyword = nil;
    self.didSelectedBlock = nil;
    [postTableView release];
    [super dealloc];
}

- (instancetype)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
        self.dataArray = [NSMutableArray arrayWithCapacity:0];
        self.m_tableHeight = SCREEN_HEIGHT-44;
        self.lastPostId = @"";
        self.keyword = @"";
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    self.view.backgroundColor = [CommonImage colorWithHexString:Color_fafafa];

    // Do any additional setup after loading the view.
    
    self.log_pageID = 416;
    
    postTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, kDeviceWidth, self.m_tableHeight) style:UITableViewStylePlain];//不要改为Group类型
    postTableView.delegate = self;
    postTableView.dataSource =self;
    postTableView.separatorColor = [CommonImage colorWithHexString:@"dcdcdc"];
    postTableView.backgroundColor = [UIColor clearColor];
    [self.view addSubview:postTableView];
    
    [self setExtraCellLineHidden:postTableView];
    
    _headView = [[EGORefreshTableHeaderView alloc] initWithFrame:CGRectMake(0, -460, kDeviceWidth, 460)];
    _headView.delegate = self;
    _headView.backgroundColor = [UIColor clearColor];
    [postTableView addSubview:_headView];
    [_headView release];
    [self getDataSource];
    
}

- (void)setIsfromSearchListFlag:(BOOL)isfromSearchListFlag
{
    if(isfromSearchListFlag){
        [_headView removeFromSuperview];
        _headView = nil;
    }
    
    _isfromSearchListFlag = isfromSearchListFlag;
    
}

/**
 *  隐藏tableviewd多余分割线
 *
 *  @param tableView
 */
-(void)setExtraCellLineHidden:(UITableView *)tableView
{
    UIView *view = [UIView new];
    view.backgroundColor = [UIColor clearColor];
    [tableView setTableFooterView:view];
    [view release];
    UIView *footView = [Common createTableFooter];
    [view addSubview:footView];
}

/**
 *  获得数据
 */
- (void)getDataSource
{
    m_loadingMore = YES;
    self.lastPostId = @"";//否则有问题
    if (m_nowPage != 1)
    {
        ConvertToPostModel *model = [self.dataArray lastObject];
        self.lastPostId = model.postId;
    }
    NSMutableDictionary *requestDic =  [[NSMutableDictionary alloc] initWithCapacity:0];
    [requestDic setValue:self.groupId forKey:@"groupId"];
    [requestDic setValue:self.keyword forKey:@"keyWorld"];
    [requestDic setValue:self.type == ALLPosts ?@"0":@"1" forKey:@"postType"];
    [requestDic setValue:self.lastPostId forKey:@"postId"];
    [requestDic setValue:[NSNumber numberWithInt:m_nowPage] forKey:@"pageNumber"];
    [requestDic setValue:[NSNumber numberWithInt:g_everyPageNum] forKey:@"pageSize"];
    
    [[CommonHttpRequest defaultInstance] sendNewPostRequest:GetGroupPostList values:requestDic requestKey:GetGroupPostList delegate:self controller:self actiViewFlag:0 title:nil];
    m_nowPage++;
    
    [requestDic release];
}

//相当于重新刷新一下
- (void)searchPostWithString:(NSString *)searchText
{
    self.keyword = searchText;
    [self egoRefreshTableHeaderDidTriggerRefresh:nil];

}

- (void)didFinishSuccess:(ASIHTTPRequest *)loader
{
    NSString *responseString = [loader responseString];
    NSDictionary *dic = [responseString KXjSONValueObject];
    
     NSDictionary *bodyDic = dic[@"body"];
    if ([dic[@"head"][@"state"] isEqualToString:@"0000"])
    {
        NSArray *resultArray = bodyDic[@"list"];
        if ([loader.username isEqualToString:GetGroupPostList]) {
            
            if (m_nowPage==2) {
                sizeHeight = 0;
                self.lastPostId = @"";
                [self.dataArray removeAllObjects];
            }
            if(resultArray.count < g_everyPageNum){
                [self endOfResultList];
            }
            for(NSDictionary *dic in resultArray){
                ConvertToPostModel *model = [[ConvertToPostModel alloc] init];
                [model parseWithDic:dic];
                [self.dataArray addObject:model];
//                [self.dataArray addObject:model];
                [model release];
                sizeHeight += model.allHeight;
//                sizeHeight += model.allHeight;
            }
            
            [postTableView reloadData];
            [self finishRefresh];
            
            
        }else  if ([loader.username isEqualToString:RemovePK]) {
            
            //[Common ShowMBProgress:self.view MSG:@"" Mode:<#(MBProgressHUDMode)#>]
            
        }
        
    } else {
        [Common TipDialog:dic[@"head"][@"msg"]];
        [self endOfResultList];
    }
}

//停止加载TableView
- (void)endOfResultList
{
    hasMoreFlag = NO;
    UILabel *lab = (UILabel*)[postTableView.tableFooterView viewWithTag:tableFooterViewLabTag];
    lab.text = @"已到底部";
    lab.frame = CGRectMake(0, 0, kDeviceWidth, 45);
    UIActivityIndicatorView *activi = (UIActivityIndicatorView*)[postTableView.tableFooterView viewWithTag:tableFooterViewActivityTag];
    [activi removeFromSuperview];
    //    activi.hidden = YES;
    
}

#pragma mark - EGORefreshTableHeaderDelegate
//收起刷新
- (void)finishRefresh{
    
    [_headView egoRefreshScrollViewDataSourceDidFinishedLoading:postTableView];
    m_loadingMore = NO;
}

- (void)egoRefreshTableHeaderDidTriggerRefresh:(EGORefreshTableHeaderView *)view
{
    hasMoreFlag = YES;
    m_loadingMore = YES;
    //下拉刷新 开始请求新数据 ---原数据清除
    m_nowPage = 1;//复位
    [self setExtraCellLineHidden:postTableView];
    //    [newsListTableView reloadData];
    [self getDataSource];
}

- (BOOL)egoRefreshTableHeaderDataSourceIsLoading:(EGORefreshTableHeaderView *)view
{
    return m_loadingMore;
}

- (NSDate *)egoRefreshTableHeaderDataSourceLastUpdated:(EGORefreshTableHeaderView *)view
{
    return [NSDate date];
}

//scrollView delegate
- (void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    if(self.tableViewScrollViewBlock){
        self.tableViewScrollViewBlock(scrollView.contentOffset.y);
//        NSLog(@"-----list-y:%f",scrollView.contentOffset.y);
//        CGFloat contentOffsetY = scrollView.contentOffset.y;
//        if(contentOffsetY >= 0 && contentOffsetY <=135+11){
//            //上移---frame 变大
//            CGRect postListRect = postTableView.frame;
//            postListRect.size.height += contentOffsetY;
//            postTableView.frame = postListRect;
////            [postTableView reloadData];
//            
//        }else if(contentOffsetY < 0){
//            //恢复到初始大小
//            postTableView.frame = CGRectMake(0, 0, kDeviceWidth, self.m_tableHeight);
////            [postTableView reloadData];
//        }else{
//            //设为最大
            postTableView.frame = CGRectMake(0, 0, kDeviceWidth, kDeviceHeight);
////            [postTableView reloadData];
//        }

        UIView *lineView = [headView viewWithTag:111];
        CGFloat contentOffsetY = scrollView.contentOffset.y;
        if(contentOffsetY >= 0 && contentOffsetY <=135){
             headView.backgroundColor = self.view.backgroundColor;
             lineView.backgroundColor = [CommonImage colorWithHexString:@"dcdcdc"];
        }else if(contentOffsetY < 0){
            headView.backgroundColor = self.view.backgroundColor;
             lineView.backgroundColor = [CommonImage colorWithHexString:@"dcdcdc"];
        }else{
            headView.backgroundColor = [UIColor clearColor];
             lineView.backgroundColor =  [UIColor clearColor];
        }
        
    }
    [_headView egoRefreshScrollViewDidScroll:scrollView];
}

//UIScrollView滚动停止
- (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView
{
//    NSArray *visiblePaths = [postTableView indexPathsForVisibleRows];
//    [m_OperationQueue loadImagesForOnscreenRows:visiblePaths isRow:YES];
}

- (void)showImageForDownload:(NSDictionary *)imageDicInfo
{
    if (m_isClose) {
        return;
    }
    
    NSMutableDictionary *dicCansu = [[NSMutableDictionary alloc] initWithDictionary:imageDicInfo];
    [self performSelectorOnMainThread:@selector(setSellerTableCellImage:) withObject:dicCansu waitUntilDone:YES];
}

- (void)setSellerTableCellImage:(NSDictionary*)canshu
{
//    UIImage *image = [canshu objectForKey:@"image"];
//    NSIndexPath *indexPath = [canshu objectForKey:@"indexPath"];
//    [canshu release];
//    
//    PostTableViewCell *cell = (PostTableViewCell*)[postTableView cellForRowAtIndexPath:indexPath];
//    //	[cell setIconImage:[UIImage imageWithData:image]];
//    [cell setIconImage:image];
}


- (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate{
    [_headView egoRefreshScrollViewDidEndDragging:scrollView];
    NSLog(@"------------:%f",scrollView.contentSize.height - scrollView.contentOffset.y - scrollView.frame.size.height);
    //上提
    if(hasMoreFlag == YES && m_loadingMore == NO &&  scrollView.contentSize.height - scrollView.contentOffset.y - scrollView.frame.size.height <= -40){
        m_loadingMore = YES;
        [self getDataSource];
    }
    if (!decelerate)//手指松开且不滚动
    {
//        NSArray *visiblePaths = [challengeListTableView indexPathsForVisibleRows];
//        [m_OperationQueue loadImagesForOnscreenRows:visiblePaths isRow:YES];
    }
}



- (void)didFinishFail:(ASIHTTPRequest *)loader
{
    NSLog(@"fail");
    
}


- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.dataArray.count;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if(_isfromSearchListFlag){
        return 0;
    }
    return 11.0;
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    headView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, kDeviceWidth, 11)];
    headView.backgroundColor = self.view.backgroundColor;
    UIView *lineView  = [[UIView alloc] initWithFrame:CGRectMake(0, headView.size.height-0.5, kDeviceWidth, 0.5)];
    lineView.backgroundColor = [CommonImage colorWithHexString:@"dcdcdc"];
    lineView.tag = 111;
    [headView addSubview:lineView];
    [lineView release];
    if(!self.dataArray.count){
        lineView.backgroundColor = [UIColor clearColor];
    }
    return headView;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{

    ConvertToPostModel *model = (ConvertToPostModel *)self.dataArray[indexPath.row];
    
    if(indexPath.row == self.dataArray.count-1){
        [self performSelector:@selector(setContentSize) withObject:nil afterDelay:0.2];
    }
    return model.allHeight;
}

- (void)setContentSize
{
    NSLog(@"--sizeHHHHH--%f,---%f",sizeHeight,kDeviceHeight+135+11);
    if(  sizeHeight > kDeviceHeight-(135+11) &&  sizeHeight - kDeviceHeight < 135+11){
        postTableView.contentSize = CGSizeMake(postTableView.size.width, kDeviceHeight+135+11);
    }

}


- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
//    if( sizeHeight - kDeviceHeight < 135+11){
//        postTableView.contentSize = CGSizeMake(postTableView.size.width, kDeviceHeight+135+11);
//    }
 
    static NSString *identifier = @"postListCell";
    PostTableViewCell *postCell = [tableView dequeueReusableCellWithIdentifier:identifier];
    if(!postCell){
        postCell = [[[PostTableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifier] autorelease];
    }

    [postCell setModel:self.dataArray[indexPath.row]];
    
    return postCell;
    
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    ConvertToPostModel *postModel = self.dataArray[indexPath.row];
    AppDelegate *myAppdelegate = [Common getAppDelegate];
    
    if(self.didSelectedBlock){
        self.didSelectedBlock();
    }
    NSMutableDictionary *dict = [@{@"postId":postModel.postId} mutableCopy];
// 跳转到web
    if ([postModel.isSystem intValue] == 2) {
        TopicDetailsViewController * top = [[TopicDetailsViewController alloc] init];
        top.m_isHideNavBar = postModel.transparent;
        top.m_dic = dict;
        top.shareTitle = [NSString stringWithFormat:@"【康迅360】- 您值得信赖的健康管理专家%@ %@",self.title,[postModel.postTitleString string]];
//        top.shareImage = m_infoDic[@"newTitleFilepath"];
        top.shareContentString = [NSString stringWithFormat:@"【康迅360】- 您值得信赖的健康管理专家%@",[postModel.postTitleString string]];
        [myAppdelegate.navigationVC  pushViewController:top animated:YES];
        [top release];
        return;
    }
//    NSMutableDictionary *dict = [@{@"postId":@"1"} mutableCopy];
    WS(weakSelf);
    __block UITableView *weakTabel = postTableView;
    __block NSIndexPath *weakIndexPath = [indexPath retain];
    CommunityDetailViewController * communityDetailVC = [[CommunityDetailViewController alloc] init];
    communityDetailVC.isfromSearchListFlag = self.isfromSearchListFlag;
    communityDetailVC.m_superDic = dict;
    communityDetailVC.myCommunityDetailViewControllerBlock = ^(NSString *str){
        if ([kDeletePost isEqualToString:str])
        {
            [weakSelf.dataArray removeObjectAtIndex:weakIndexPath.row];
            [weakTabel deleteRowsAtIndexPaths:[NSArray arrayWithObject:weakIndexPath] withRowAnimation:UITableViewRowAnimationFade];
            [weakIndexPath release];
        }
    };
    [myAppdelegate.navigationVC  pushViewController:communityDetailVC animated:YES];
    [communityDetailVC release];
    [dict release];
}

- (void)addNewPost:(NSDictionary *)newPostDic
{
    ConvertToPostModel *model = [[ConvertToPostModel alloc] init];
    [model parseWithDic:newPostDic];
    
    int index;
    ConvertToPostModel *model2;
    for (index =0; index<self.dataArray.count; index++) {
        model2 = self.dataArray[index];
        if (![model2.m_lable containsString:@"1"]) {
            break;
        }
    }
    [self.dataArray insertObject:model atIndex:index];
    [model release];
    sizeHeight += model.allHeight;

    [postTableView reloadData];
    [postTableView scrollToRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:0] atScrollPosition:UITableViewScrollPositionTop animated:YES];
}


- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
