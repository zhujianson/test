//
//  VideoListCollectionVC.m
//  healthManagement1.0
//
//  Created by xuguohong on 16/7/4.
//  Copyright © 2016年 xuGuohong. All rights reserved.
//

#import "VideoListCollectionVC.h"
#import "RightCollectionViewCell.h"
#import "HeaderCollectionReusableView.h"
#import "VideoDetailViewController.h"

@interface VideoListCollectionVC ()<UICollectionViewDataSource,UICollectionViewDelegate,UICollectionViewDelegateFlowLayout>

@end

@implementation VideoListCollectionVC
{
    UICollectionView *_rightCollectionView;
    NSMutableArray * m_allData;
    
}
static NSString * const reuseIdentifier = @"Cell";

- (void)viewDidLoad {
    [super viewDidLoad];
    m_allData = [[NSMutableArray alloc]init];

    [self CreatRightCollectionView];

    [self getAllData];
    // Uncomment the following line to preserve selection between presentations
    // self.clearsSelectionOnViewWillAppear = NO;
    
    // Register cell classes
//    [self.collectionView registerClass:[UICollectionViewCell class] forCellWithReuseIdentifier:reuseIdentifier];
    
    // Do any additional setup after loading the view.
}

- (void)getAllData
{
    NSMutableDictionary* dic = [NSMutableDictionary dictionary];
    [dic setObject:@"1" forKey:@"type"];
    [dic setObject:@"0" forKey:@"classification"];
    [[CommonHttpRequest defaultInstance] sendNewPostRequest:GET_API_CORSELIST values:dic requestKey:GET_API_CORSELIST delegate:self controller:self actiViewFlag:0 title:NSLocalizedString(@"", nil)];

}

-(void)CreatRightCollectionView
{
    UICollectionViewFlowLayout *flowayout = [[UICollectionViewFlowLayout alloc]init];
    flowayout.minimumInteritemSpacing = 0.f;
    flowayout.minimumLineSpacing = 0.5f;
    flowayout.headerReferenceSize = CGSizeMake(kDeviceWidth, 45);
    
    _rightCollectionView = [[UICollectionView alloc]initWithFrame:CGRectMake(0, 0, self.view.size.width, self.view.size.height-49-45-64) collectionViewLayout:flowayout];
    [_rightCollectionView registerClass:[HeaderCollectionReusableView class] forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"hxwHeader"];

    [_rightCollectionView registerClass:[RightCollectionViewCell class] forCellWithReuseIdentifier:@"RightCollectionViewCell"];
    
    [_rightCollectionView setBackgroundColor:[CommonImage colorWithHexString:VERSION_BACKGROUD_COLOR2]];
    
//    _rightCollectionView.dele
    _rightCollectionView.delegate = self;
    _rightCollectionView.dataSource = self;
    
    [self.view addSubview:_rightCollectionView];
    
    
}


#pragma mark------CollectionView的代理方法
-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    
    return [m_allData[section][@"list"] count];
    
}

-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    
    RightCollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"RightCollectionViewCell" forIndexPath:indexPath];
//    cell.layer.borderColor = [CommonImage colorWithHexString:LINE_COLOR].CGColor;
//    cell.layer.borderWidth = 0.5;
    cell.backgroundColor = [UIColor whiteColor];
    //根据左边点击的indepath更新右边内容;
    if (indexPath.row%2) {
        cell.imageview.frame = [Common rectWithOrigin:cell.imageview.frame x:5 y:0];
    }else{
        cell.imageview.frame = [Common rectWithOrigin:cell.imageview.frame x:15 y:0];
    }
    cell.titleLabel.frame = [Common rectWithOrigin:cell.titleLabel.frame x:cell.imageview.left y:0];
    cell.sparkImage.frame = [Common rectWithOrigin:cell.sparkImage.frame x:cell.imageview.left y:0];
    cell.readingLab.frame = [Common rectWithOrigin:cell.readingLab.frame x:cell.imageview.left+15 y:0];

    cell.titleLabel.text = m_allData[indexPath.section][@"list"][indexPath.row][@"courseTitle"];
    cell.readingLab.text = [NSString stringWithFormat:@"%@",m_allData[indexPath.section][@"list"][indexPath.row][@"browseNum"]];

    [CommonImage setImageFromServer:[NSString stringWithFormat:@"%@",m_allData[indexPath.section][@"list"][indexPath.row][@"iconUrl"]] View:cell.imageview Type:2];
    cell.viedoType.image = [self setImageTypeWithStr:[NSString stringWithFormat:@"%@",m_allData[indexPath.section][@"list"][indexPath.row][@"isFree"]]];
    
    return cell;
    
}

- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView
{
    return m_allData.count;
    
}

- (UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath
{
    HeaderCollectionReusableView *headView =[collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"hxwHeader" forIndexPath:indexPath];;
    headView.butMore.tag = indexPath.section+100;
    
    headView.backgroundColor = [UIColor whiteColor];
    headView.label.text = m_allData[indexPath.section][@"name"];
    WS(weak);
    
    headView.m_block = ^(int blockTag){
        VideoDetailViewController * video = [[VideoDetailViewController alloc]init];
//        [video.m_allData addObjectsFromArray:m_allData[indexPath.section][@"list"]];
        video.m_dic = m_allData[indexPath.section];
        video.title =m_allData[indexPath.section][@"name"];
        UIViewController * contro = weak.view.superview.viewController;
        [contro.navigationController pushViewController:video animated:YES];
    };
    
    return headView;
}

- (UIImage*)setImageTypeWithStr:(NSString*)str
{
    UIImage * image;
    switch ([str intValue]) {
        case 0:
            image = [UIImage imageNamed:@"common.bundle/home/free"];
            break;
        case 1:
            image = [UIImage imageNamed:@"common.bundle/home/charge"];
            break;
        case 2:
            image = [UIImage imageNamed:@"common.bundle/home/unlock"];
            
            break;
            
        default:
            break;
    }
    return image;
}


-(UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout insetForSectionAtIndex:(NSInteger)section
{
    
    return UIEdgeInsetsMake(0, 0, 0, 0);
    
}

-(CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath
{
    return CGSizeMake(kDeviceWidth/2, 55+190/2*kDeviceWidth/375);
}


//UICollectionView被选中时调用的方法
-(void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
//    UICollectionViewCell * cell = (UICollectionViewCell *)[collectionView cellForItemAtIndexPath:indexPath];
//    cell.backgroundColor = [UIColor whiteColor];
    
    NSLog(@"%ld",(long)indexPath.row);
    
}

- (void)didFinishSuccess:(ASIHTTPRequest*)loader
{
    NSString* responseString = [loader responseString];
    NSDictionary* dic = [responseString KXjSONValueObject];
    
    NSDictionary *head = dic[@"head"];
    if (![head[@"state"] intValue]) {
        NSDictionary *body = dic[@"body"];
        if (!body.count)
        {
            return;
        }
        if ([loader.username isEqualToString:GET_API_CORSELIST])
        {
            for (NSDictionary * d in body[@"list"]) {
                [m_allData addObject:d];
            }
            [_rightCollectionView reloadData];
        }
    }
    else
    {
        [Common TipDialog2:head[@"msg"]];
    }
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


@end
